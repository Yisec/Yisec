{"version":3,"file":"yisec.js","sources":["../lib/register.js","../lib/util.js","../lib/Component.js","../lib/FVEvents.js","../lib/d.js","../lib/ast.js","../lib/forceUpdate.js","../lib/autorun.js","../lib/execExpr.js","../lib/diff.js","../lib/handleClass.js","../lib/eventAlias.js","../lib/domLifeCycle.js","../lib/unmount.js","../lib/handleStyle.js","../lib/transform.js","../lib/render.js","../lib/index.js"],"sourcesContent":["/**\n * 所有注册组件缓存\n */\nexport const registerComponents = {};\n/**\n * 添加全局组件\n * @param name\n * @param Com\n */\nexport default function register(name, Com) {\n    registerComponents[name] = Com;\n}\n","import { registerComponents } from \"./register\";\nimport Component from \"./Component\";\n/**\n * 获取数据类型\n * @param arg\n */\nexport function getType(arg) {\n    return Object.prototype.toString.call(arg).match(/\\s(.+)]/)[1].toLowerCase();\n}\nexport function isFunction(...args) {\n    return args.every(arg => getType(arg) === 'function');\n}\nexport function isArray(...args) {\n    return args.every(arg => getType(arg) === 'array');\n}\nexport function isObject(...args) {\n    return args.every(arg => getType(arg) === 'object');\n}\nexport function isString(...args) {\n    return args.every(arg => getType(arg) === 'string');\n}\nexport function isBool(...args) {\n    return args.every(arg => getType(arg) === 'boolean');\n}\nexport function isPromise(...args) {\n    return args.every(arg => getType(arg) === 'promise');\n}\n/**\n * 转classname\n * @param v\n */\nexport function toClassNames(v) {\n    switch (getType(v)) {\n        case 'array': {\n            return v.map(toClassNames).join(' ');\n        }\n        case 'object': {\n            return Object.keys(v).map(key => {\n                return v[key] ? key : '';\n            }).join(' ');\n        }\n        case 'string': {\n            return v;\n        }\n        default: {\n            return '';\n        }\n    }\n}\n// setTimeout的封装\nexport function ST(fn, time) {\n    if (time > 0) {\n        setTimeout(fn, time);\n    }\n    else {\n        fn();\n    }\n}\n// 移除重复元素\nexport function uniqueArr(arr = []) {\n    const newArr = [];\n    arr.forEach(item => {\n        if (!newArr.includes(item)) {\n            newArr.push(item);\n        }\n    });\n    return newArr;\n}\n/**\n * 绑定this\n * @param fn\n * @param ctx\n */\nexport function bindContext(fn, ctx) {\n    if (getType(fn).includes('function')) {\n        fn = fn.bind(ctx);\n    }\n    return fn;\n}\nexport function uuid(len = 8) {\n    const S = '0123456789qwertyuioopasdfghjklzxcvbnmQWERTYUIOOPASDFGHJKLZXCVBNM';\n    const LEN = S.length;\n    return ' '.repeat(len).split('').map(() => S[Math.round(Math.random() * LEN)]).join('');\n}\nexport function getComponent(name = '', ctxs = []) {\n    for (let i = 0; i < ctxs.length; i++) {\n        if (ctxs[i].components && ctxs[i].components[name]) {\n            return ctxs[i].components[name];\n        }\n    }\n    return registerComponents[name];\n}\nexport function getParentCtx(ctxs = []) {\n    for (let i = 0; i < ctxs.length; i++) {\n        if (ctxs[i] instanceof Component) {\n            return ctxs[i];\n        }\n    }\n}\n","import { isFunction } from \"./util\";\nexport default class Component {\n    constructor() {\n        // 模板\n        this.template = '';\n        // 状态\n        this.state = {};\n        // props\n        this.props = {};\n        // 子组件\n        this.components = {};\n        // 子组件\n        this.children = [];\n        // 指定dom\n        this.refs = {};\n        // 方便template直接获取经过复杂计算的数据\n        this.computed = {};\n        // 触发props上的事件\n        this.$emit = (key, ...data) => {\n            let parent = this.parent;\n            let stopBubble = false;\n            while (!stopBubble && parent) {\n                const fn = parent.emit[key] || parent[key];\n                if (isFunction(fn)) {\n                    stopBubble = fn.call(parent, ...data) === false;\n                }\n                parent = parent.parent;\n            }\n        };\n        this.$emitChildren = (key, ...data) => {\n            function children(node) {\n                node.children.forEach(item => {\n                    const fn = item.emit[key] || item[key];\n                    isFunction(fn) && fn.call(item, ...data);\n                    children(item);\n                });\n            }\n            children(this);\n        };\n        this.$emitSiblings = (key, ...data) => {\n            this.parent && this.parent.children.forEach(item => {\n                if (item !== this) {\n                    const fn = item.emit[key] || item[key];\n                    isFunction(fn) && fn.call(item, ...data);\n                }\n            });\n        };\n        this.emit = {};\n    }\n    render() {\n        return this.template;\n    }\n    willMount() { }\n    didMount() { }\n    didUpdate() { }\n    // 内部方法，触发组件卸载\n    __willUnmount() {\n        this.children.forEach(com => com.__willUnmount());\n        this.willUnmount();\n        this.children = [];\n        if (this.parent) {\n            this.parent.children = this.parent.children.filter(i => i !== this);\n        }\n    }\n    willUnmount() { }\n}\nComponent.defaultProps = {};\n","/**\n * FVEvents 被用来统一处理事件监听\n */\nexport default class FVEvents {\n    constructor() {\n        this.cache = [];\n    }\n    /**\n     * 事件绑定\n     */\n    on(element, key, fn) {\n        this.cache.push([key, fn]);\n        element.addEventListener(key, fn);\n        return this;\n    }\n    /**\n     * 事件移除\n     */\n    off(element, key, fn) {\n        this.cache = this.cache.filter(([_key, _fn]) => {\n            if ((key === _key && fn === _fn) // 卸载指定key,fn的事件\n                || (key === _key && fn === undefined) // 卸载指定key的事件\n                || (key === undefined && fn === undefined) // 卸载所有事件\n            ) {\n                element.removeEventListener(_key, _fn);\n                return false;\n            }\n        });\n        return this;\n    }\n}\n","import FVEvents from \"./FVEvents\";\nexport class VirtualDOM {\n    constructor(parent) {\n        this.exprs = [];\n        this.events = new FVEvents();\n        this.children = [];\n        this.ctxs = [];\n        this.unmounted = false;\n        if (parent) {\n            this.parent = parent;\n            this.parent.children.push(this);\n        }\n    }\n    unmount() {\n        this.exprs.forEach(fn => fn());\n        (this.dom instanceof HTMLElement) && this.events.off(this.dom);\n        this.component && this.component.__willUnmount();\n        this.unmounted = true;\n    }\n}\nexport class TokenElement {\n    constructor(type, index, value, origin = value) {\n        this.type = type;\n        this.index = index;\n        this.value = value;\n        this.origin = origin;\n    }\n}\n/**\n * AST节点\n * @class ASTNode\n */\nexport class ASTNode {\n    constructor(tagName = '') {\n        this.children = []; // 子节点\n        this.props = {}; // props\n        this.type = 'element'; // 节点类型\n        this.exprs = [];\n        this.tagName = tagName;\n        // 判断是不是组件\n        if (/^[A-Z]/.test(tagName)) {\n            this.type = 'component';\n        }\n    }\n}\n","// 解析template\n// 有时候我们不想使用jsx，不想使用babel编译💊\n// 那就使用类似vue angular之类的字符串模板吧\n// 使用模板编译的好处有哪些？，模板本身可以作为资源加载，也就是View层 \n// 自身的逻辑层可以作为控制器\n// 再加一个Model作为数据来源\nimport { ASTNode, TokenElement } from \"./d\";\n/**\n * 半闭合标签 可以以 > 或 /> 结尾\n */\nconst selfCloseElements = ['img', 'br', 'hr', 'input'];\n// 我们应该在解析关键字的同时，保留原始字符串\nconst M = {\n    get SELF_CLOSE() {\n        return /^(\\/\\s*>)\\s*/;\n    },\n    get CLOSE_START() {\n        return /^(<\\s*\\/)\\s*/;\n    },\n    get TAG_CLOSE() {\n        return /^(>)\\s*/;\n    },\n    get OPEN_START() {\n        return /^(<)\\s*/;\n    },\n    get EQ() {\n        return /^(=)\\s*/;\n    },\n    get TAG_NAME() {\n        return /^([a-zA-Z]-?([a-zA-Z0-9]-?)*)\\s*/;\n    },\n    get PROPERTY_NAME() {\n        return /^([a-zA-Z@:]-?([a-zA-Z0-9]-?)*)\\s*/;\n    },\n    get PROPERTY_VALUE() {\n        return /^\"([^\"]*)\"\\s*/;\n    },\n    get EXPR() {\n        return /^{{2}(((?!}{2}).)*)\\}{2}\\s*/;\n    },\n    get STRING() {\n        return /^[\\s\\S][^<{]*/;\n    },\n};\n/**\n * 字符串转token\n *\n * @param {string} [str='']\n * @returns {TokenElement[]}\n */\nexport function getToken(str = '') {\n    const token = [];\n    let localStr = str;\n    let index = 0;\n    // closeStart\n    // 获取token，并记解析位置\n    function removePreSpace() {\n        const [space] = localStr.match(/^\\s+/) || [''];\n        index += space.length;\n        localStr = localStr.slice(space.length);\n    }\n    function getPrev(index) {\n        return token[token.length - index] || {};\n    }\n    function next() {\n        removePreSpace();\n        if (localStr.length == 0)\n            return;\n        // />\n        if (M.SELF_CLOSE.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.SELF_CLOSE) || ['', ''];\n            token.push(new TokenElement('SELF_CLOSE', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // </\n        if (M.CLOSE_START.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.CLOSE_START) || ['', ''];\n            token.push(new TokenElement('CLOSE_START', index, value));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // <\n        if (M.OPEN_START.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.OPEN_START) || ['', ''];\n            token.push(new TokenElement('OPEN_START', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // >\n        if (M.TAG_CLOSE.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.TAG_CLOSE) || ['', ''];\n            token.push(new TokenElement('TAG_CLOSE', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // =\n        if (M.EQ.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.EQ) || ['', ''];\n            token.push(new TokenElement('EQ', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // Aaa-bb 向前读一位需要是 OPEN_START | CLOSE_START\n        if (M.TAG_NAME.test(localStr)\n            && (getPrev(1).type == 'OPEN_START' || getPrev(1).type == 'CLOSE_START')) {\n            const [matchStr, value] = localStr.match(M.TAG_NAME) || ['', ''];\n            token.push(new TokenElement('TAG_NAME', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // :@Aaa-bb\n        if (M.PROPERTY_NAME.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.PROPERTY_NAME) || ['', ''];\n            token.push(new TokenElement('PROPERTY_NAME', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // 属性value \"\" \n        if (M.PROPERTY_VALUE.test(localStr)\n            && getPrev(1).type == 'EQ' // 向前读一位需要是 EQ \n            && getPrev(2).type == 'PROPERTY_NAME' // 向前读2位需要是 PROPERTY_NAME\n        ) {\n            // 向前读，需要是\n            const [matchStr, value] = localStr.match(M.PROPERTY_VALUE) || ['', ''];\n            token.push(new TokenElement('PROPERTY_VALUE', index, value, matchStr));\n            index += matchStr.length;\n            localStr = localStr.slice(matchStr.length);\n            return next();\n        }\n        // 表达式\n        if (M.EXPR.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.EXPR) || ['', ''];\n            token.push(new TokenElement('EXPR', index, value, matchStr));\n            index += matchStr.length;\n            localStr = localStr.slice(matchStr.length);\n            return next();\n        }\n        // 文本节点\n        if (M.STRING.test(localStr)) {\n            const [value] = localStr.match(M.STRING) || [''];\n            token.push(new TokenElement('STRING', index, value));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n    }\n    next();\n    return token;\n}\n/**\n * 处理解析错误\n *\n * @param {any} token\n * @param {any} template\n * @param {any} message\n */\nfunction handleASTError(token, template, message) {\n    const str = template.slice(0, token.index);\n    const enter = str.match(/\\n/g);\n    const row = enter ? enter.length + 1 : 1;\n    const column = str.length - str.lastIndexOf('\\n');\n    console.error(`at row:${row} column:${column} \\n\\n${template.slice(token.index, token.index + 100)} \\n\\n${message}`);\n}\n// 读取元素 \n// token[0].type == 'OPEN_START'\n// token[1].type == 'TAG_NAME'\n// token[2].type == 'TAG_NAME' *\n//     token[3].type == 'EQ' && token[4].type == 'PROPERTY_VALUE'\n// token[0].type == 'TAG_CLOSE' || token[0].type == 'SELF_CLOSE'\n//     Element\n// token[0].type == 'CLOSE_START'\n// token[1].type == 'TAG_NAME'\n// token[2].type == 'TAG_CLOSE'\nexport function toAST(token = [], template = '') {\n    const root = new ASTNode();\n    let currentNode = root;\n    let index = 0;\n    let currentT;\n    const LEN = token.length;\n    function getT(index) {\n        return token[index] || {};\n    }\n    next();\n    function next() {\n        if (index >= LEN)\n            return;\n        // 当前token\n        currentT = token[index];\n        // open tag | close self tag\n        if (currentT.type == 'OPEN_START'\n            && getT(index + 1).type == 'TAG_NAME') {\n            // 获取\n            let localIndex = index + 2;\n            const props = {};\n            const tagName = getT(index + 1).value;\n            while (getT(localIndex).type == 'TAG_NAME' || getT(localIndex).type == 'PROPERTY_NAME') {\n                if (getT(localIndex + 1).type == 'EQ') {\n                    if (getT(localIndex + 2).type == 'PROPERTY_VALUE') {\n                        props[getT(localIndex).value] = getT(localIndex + 2).value;\n                        localIndex += 3;\n                        continue;\n                    }\n                    else {\n                        handleASTError(getT(localIndex), template, `${getT(localIndex).value} should have a value`);\n                    }\n                }\n                props[getT(localIndex).value] = true;\n                localIndex += 1;\n            }\n            const TAG_TYPE = getT(localIndex).type;\n            if (TAG_TYPE == 'TAG_CLOSE' || TAG_TYPE == 'SELF_CLOSE') {\n                const node = new ASTNode(tagName);\n                node.props = props;\n                node.parent = currentNode;\n                currentNode.children.push(node);\n                if (TAG_TYPE === 'TAG_CLOSE' && !selfCloseElements.includes(tagName)) {\n                    currentNode = node;\n                }\n            }\n            index = localIndex + 1;\n        }\n        else if (currentT.type == 'CLOSE_START'\n            && getT(index + 1).type == 'TAG_NAME'\n            && getT(index + 2).type == 'TAG_CLOSE') {\n            if (currentNode.tagName !== getT(index + 1).value) {\n                handleASTError(getT(index + 1), template, `close tag name should be ${currentNode.tagName}, but now is ${getT(index + 1).value}`);\n            }\n            currentNode = currentNode.parent;\n            index += 3;\n        }\n        else {\n            const last = currentNode.children[currentNode.children.length - 1];\n            if (currentT.type == 'EXPR') {\n                const node = new ASTNode();\n                node.value = currentT.value;\n                node.type = 'expr';\n                node.parent = currentNode;\n                currentNode.children.push(node);\n            }\n            else if (last && last.type === 'text') {\n                last.value += currentT.value;\n            }\n            else {\n                const node = new ASTNode();\n                node.type = 'text';\n                node.value = currentT.origin || currentT.value || '';\n                node.parent = currentNode;\n                currentNode.children.push(node);\n            }\n            index++;\n        }\n        next();\n    }\n    return root;\n}\nlet cache = {};\n// 字符串 => ast\nexport default function (template = '') {\n    // 使用缓存，不用再ast => dom的时候对ast进行修改\n    return cache[template] = cache[template] || toAST(getToken(template), template);\n}\n","let queue = [];\nlet timeout;\nexport function addExecQueue(list = []) {\n    // return list.forEach(fn => fn())\n    clearTimeout(timeout);\n    queue.push(...list);\n    timeout = setTimeout(() => {\n        forceUpdate();\n        console.timeEnd('forceUpdate');\n    });\n}\nexport default function forceUpdate(afterFn = () => { }) {\n    const haveExec = [];\n    queue.forEach(fn => {\n        if (!haveExec.includes(fn)) {\n            haveExec.push(fn);\n            fn();\n            queue = queue.filter(i => i !== fn);\n        }\n        else {\n            console.log('不执行', fn.str);\n        }\n    });\n    afterFn();\n}\n","import { getType, bindContext, uuid, isArray } from \"./util\";\nimport { addExecQueue } from \"./forceUpdate\";\nexport class Observe {\n}\nconst defaultCurrent = () => () => { };\n// observer数据get时，进行依赖手机\nlet currentFn = defaultCurrent;\n/**\n * 依赖\n * @class Depends\n */\nexport class Depends {\n    constructor(root, key) {\n        this.list = [];\n        this.root = root;\n        this.key = key;\n    }\n    collect() {\n        if (currentFn !== defaultCurrent) {\n            currentFn((fn) => {\n                // 获取依赖函数，并返回移除依赖函数\n                !this.list.includes(fn) && this.list.push(fn);\n                return () => {\n                    this.list = this.list.filter(i => i !== fn);\n                };\n            });\n        }\n    }\n    run() {\n        // debugger\n        // console.log(this.key, this.list)\n        addExecQueue(this.list);\n    }\n}\nclass ObserveId {\n    constructor() {\n        this.id = uuid() + ObserveId.id++;\n        this.keys = [];\n    }\n}\nObserveId.id = 0;\nfunction addObserverId(newObj) {\n    if (newObj.__observeId__ instanceof ObserveId) {\n        return;\n    }\n    Object.defineProperty(newObj, '__observeId__', {\n        value: new ObserveId(),\n        configurable: false,\n        writable: false,\n        enumerable: false,\n    });\n}\nexport function isObserve(obj) {\n    return (obj instanceof Observe) || (isArray(obj) && obj.__observe__);\n}\nexport function addObserve(ctx, key, defaultValue = ctx[key], options = { deep: false }) {\n    addObserverId(ctx);\n    // 这里隐含了一个bug，如果state,prop被更改，就懵逼了，因此设置state、props writable: false\n    if (ctx.__observeId__.keys.includes(key)) {\n        ctx[key] = defaultValue; // 数据已监听，则更新\n        return;\n    }\n    else {\n        ctx.__observeId__.keys.push(key);\n    }\n    let value = bindContext(defaultValue, ctx);\n    // 依赖此key的函数\n    const depends = new Depends(ctx, key);\n    let isResetValue = true;\n    // 默认bind this\n    Object.defineProperty(ctx, key, {\n        get() {\n            // 收集依赖\n            depends.collect();\n            // 只有在被获取的时候，才会对数据进行observe\n            if (isResetValue && options.deep) {\n                value = observer(value, Object.assign({}, options, { parentDepend: depends }));\n            }\n            isResetValue = false;\n            return value;\n        },\n        set(newValue) {\n            isResetValue = true;\n            value = bindContext(newValue, ctx);\n            // 触发依赖函数更新\n            depends.run();\n        },\n        enumerable: true,\n    });\n}\n/**\n * 监听数组\n * @param arr\n * @param parentDepends\n */\nexport function observeArr(arr = [], options) {\n    const newArr = arr.map(item => observer(item));\n    Object.defineProperty(newArr, '__observe__', {\n        value: true,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n    });\n    [\n        'splice',\n        'push',\n        'shift',\n        'unshift',\n        'pop',\n    ].forEach(key => {\n        const value = [][key].bind(newArr);\n        // 如果数组长度被修改，通知他的父元节点\n        Object.defineProperty(newArr, key, {\n            get() {\n                return (...args) => {\n                    if (options.deep) {\n                        if (key == 'push' || key == 'unshift') {\n                            args = args.map(i => observer(i));\n                        }\n                        else if (key == 'splice') {\n                            args = args.slice(0, 2).concat(args.slice(2).map(i => observer(i)));\n                        }\n                    }\n                    const result = value(...args);\n                    // 对于数组的变化，直接出发调用数组的依赖\n                    console.log('arr change', key, options.parentDepend);\n                    options.parentDepend && options.parentDepend.run();\n                    console.time('forceUpdate');\n                    return result;\n                };\n            },\n            enumerable: false,\n        });\n    });\n    return newArr;\n}\n/**\n * 监听对象\n * @param obj\n * @param init\n */\nexport function observeObj(obj = {}, options) {\n    let newObj = new Observe();\n    // 添加id\n    addObserverId(newObj);\n    Object.keys(obj).forEach(key => {\n        addObserve(newObj, key, obj[key], options);\n    });\n    return newObj;\n}\n/**\n * 构造一个新的observe对象\n * @param {objet} obj\n * @returns\n */\nexport function observer(obj, options = { deep: false }) {\n    if (isObserve(obj)) {\n        return obj;\n    }\n    switch (getType(obj)) {\n        case 'array':\n            return observeArr(obj, options);\n        case 'object':\n            return observeObj(obj, options);\n        default:\n            return obj;\n    }\n}\n/**\n * 接受函数，当依赖的数据发生变化后，会立即执行函数\n *\n * @param {function} fn\n * @returns\n */\nexport function autorun(fn, str, callback) {\n    let destoryDepends = [];\n    // 销毁依赖\n    const destory = () => {\n        destoryDepends.forEach(fn => fn());\n        destoryDepends = [];\n    };\n    const wrapFn = () => {\n        // console.log('autorun::', str, wrapFn.str, wrapFn.callback, wrapFn)\n        destory(); // 销毁上次依赖监听\n        // 收集本次依赖\n        currentFn = (getDestory) => {\n            destoryDepends.push(getDestory(wrapFn));\n            return wrapFn;\n        };\n        fn();\n        // 重置回默认值\n        currentFn = defaultCurrent;\n    };\n    wrapFn.str = str;\n    wrapFn.callback = callback;\n    // 立即执行\n    wrapFn();\n    return destory;\n}\n","import { autorun } from \"./autorun\";\nimport { isArray } from './util';\nconst pipes = [];\nexport function addPipe(...ctxs) {\n    pipes.push(...ctxs);\n}\n/**\n * pipe 上一个函数返回结果作为下一个函数的输入\n * @param fns\n */\nfunction handlePipe(...fns) {\n    return (arg) => {\n        let result = arg;\n        fns.forEach(fn => {\n            result = fn(result);\n        });\n        return result;\n    };\n}\nfunction getPipes(exprs, ctxs) {\n    exprs = exprs.map(i => i.trim()).filter(i => i);\n    return handlePipe(...exprs.map(expr => execExprIm(expr, [...ctxs, ...pipes])));\n}\n// 分割表达式，只处理不重复的分隔符|\nconst splitExpr = (function () {\n    let splitExprCache = {};\n    return function splitExpr(str = '') {\n        if (splitExprCache[str]) {\n            return splitExprCache[str];\n        }\n        const exprArr = [];\n        let current = '';\n        let index = 0;\n        while (index < str.length) {\n            const char = str[index];\n            if (char === '|'\n                && !/\\|\\s*$/.test(current)\n                && !/^\\s*\\|/.test(str.slice(index + 1))) {\n                exprArr.push(current);\n                current = '';\n            }\n            else {\n                current += char;\n            }\n            index += 1;\n        }\n        exprArr.push(current);\n        splitExprCache[str] = exprArr;\n        return exprArr;\n    };\n}());\nexport function execExprIm(expr = '', ctxs) {\n    const splitResult = splitExpr(expr);\n    const inputExpr = splitResult[0];\n    // 我们不合并对象，因为对象可能是observable的，这里通过with嵌套的形式\n    const names = ctxs.map((i, index) => '__with__local__' + index);\n    let body = `return ${inputExpr}`;\n    names.reverse().forEach(i => {\n        body = `with (${i}) {\n            ${body}\n         }`;\n    });\n    const input = new Function(...names, body)(...ctxs);\n    if (splitResult.length > 1) {\n        const pipes = getPipes(splitResult.slice(1), ctxs);\n        return handlePipe(pipes)(input);\n    }\n    return input;\n}\n/**\n * 执行表达式\n * @param {string} expr\n * @param {any[]} ctxs\n * @param {(result: any) => void} fn\n * @returns\n */\nexport function execExpr(expr, ctxs, fn) {\n    let oldValue;\n    let oldLen;\n    function isEqual(newValue, oldValue) {\n        // console.log(newValue, oldValue)\n        if (newValue !== oldValue) {\n            return false;\n        }\n        if (isArray(newValue)) {\n            const newLen = newValue.length;\n            const equal = newLen === oldLen;\n            oldLen = newLen;\n            return equal;\n        }\n        return true;\n    }\n    return fn && autorun(() => {\n        const newValue = execExprIm(expr, ctxs);\n        (!isEqual(newValue, oldValue)) && fn(newValue, oldValue);\n        oldValue = newValue;\n    }, expr, fn);\n}\n// 不应该在表达式内，定义一个observer\n","// 处理数组diff 返回数组变更\nimport { uniqueArr } from \"./util\";\nexport default function diff(oldArr = [], newArr = [], isKeyExist = true) {\n    newArr = uniqueArr(newArr);\n    // getDelete\n    let deleteArr = [];\n    let keepArr = [];\n    let deleteAll = false; // 是否删除所有元素\n    let addAll = false;\n    let prevIndex = -2;\n    let add;\n    if (!isKeyExist) {\n        return {\n            del: {\n                arr: oldArr,\n            },\n            add: {\n                before: {\n                    key: null,\n                    arr: newArr,\n                },\n                after: {\n                    key: null,\n                    arr: [],\n                }\n            }\n        };\n    }\n    for (let i = 0; i < oldArr.length; i++) {\n        const item = oldArr[i];\n        const INDEX = newArr.indexOf(item);\n        // console.log(INDEX, item)\n        if (INDEX < 0) {\n            deleteArr.push(item);\n        }\n        else {\n            // 判断是否在newArr中连续出现\n            if (prevIndex !== -2 && prevIndex + 1 !== INDEX) {\n                deleteAll = true;\n                addAll = true;\n                deleteArr = oldArr;\n                keepArr = [];\n                break;\n            }\n            else {\n                keepArr.push(item);\n            }\n            prevIndex = INDEX;\n        }\n    }\n    if (addAll || !keepArr.length) {\n        add = {\n            before: {\n                key: null,\n                arr: newArr,\n            },\n            after: {\n                key: 0,\n                arr: [],\n            }\n        };\n    }\n    else {\n        const start = newArr.indexOf(keepArr[0]);\n        const end = newArr.indexOf(keepArr[keepArr.length - 1]);\n        add = {\n            before: {\n                key: keepArr[0],\n                arr: newArr.slice(0, start)\n            },\n            after: {\n                key: keepArr[keepArr.length - 1],\n                arr: newArr.slice(end + 1)\n            },\n        };\n    }\n    // 计算新增数组\n    return {\n        del: {\n            arr: deleteArr,\n        },\n        add,\n    };\n}\n","import { execExpr } from \"./execExpr\";\nimport { toClassNames } from \"./util\";\nfunction updateClassName(element, classNames) {\n    element.className = Object.keys(classNames)\n        .map(key => classNames[key])\n        .map(i => i || '').join(' ').trim();\n}\nexport function testClass(vdom, type = '') {\n    const { ast, dom: element } = vdom;\n    type += (type ? '-' : '');\n    const classProperties = [\n        `@${type}class`,\n        `${type}class`,\n        `@${type}mclass`,\n        `${type}mclass`,\n    ];\n    return Object.keys(ast.props).some(key => classProperties.includes(key));\n}\n// class mclass\n// enter-class enter-mclass\n// leave-class leave-mclass\nexport default function handleClass(vdom, ctxs, key, type = '') {\n    const { ast: node, dom: element } = vdom;\n    const value = node.props[key];\n    const classNames = vdom.classNames = vdom.classNames || {};\n    type += (type ? '-' : '');\n    if (key === `:${type}class`) {\n        vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n            classNames[key] = toClassNames(newValue);\n            updateClassName(element, classNames);\n        }));\n    }\n    else if (key === `${type}class`) {\n        classNames[key] = value;\n        updateClassName(element, classNames);\n    }\n    else if (key === `:${type}mclass`) {\n        vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n            newValue = toClassNames(newValue).split(/\\s+/g).map(key => {\n                return (ctxs[0].mclass || {})[key];\n            }).join(' ');\n            classNames[key] = newValue;\n            updateClassName(element, classNames);\n        }));\n    }\n    else if (key === `${type}mclass`) {\n        classNames[key] = value.split(/\\s+/g).map(key => {\n            return (ctxs[0].mclass || {})[key];\n        }).join(' ');\n        updateClassName(element, classNames);\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n","let isScroll = false;\nlet timeout;\nwindow.addEventListener('scroll', () => {\n    isScroll = true;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n        isScroll = false;\n    }, 50);\n});\n// 事件别名\nconst eventAlias = {\n    enter: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 13) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    up: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 38) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    down: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 40) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    left: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 37) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    esc: (fn) => ([\n        {\n            eventName: 'keyup',\n            listener: (event, ...args) => {\n                if (event.keyCode == 27) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    ctrlEnter: (fn) => {\n        const recodeKey = {\n            ctrl: false,\n            enter: false,\n        };\n        return ([\n            {\n                eventName: 'keydown',\n                listener: (event, ...args) => {\n                    if (event.keyCode == 13) {\n                        recodeKey.enter = true;\n                    }\n                    else if (event.keyCode == 17) {\n                        recodeKey.ctrl = true;\n                    }\n                    recodeKey.enter && recodeKey.ctrl && fn(...args);\n                }\n            },\n            {\n                eventName: 'keyup',\n                listener: (event, ...args) => {\n                    if (event.keyCode == 13) {\n                        recodeKey.enter = false;\n                    }\n                    else if (event.keyCode == 17) {\n                        recodeKey.ctrl = false;\n                    }\n                }\n            }\n        ]);\n    },\n    click: (fn) => {\n        if (window.navigator.userAgent.toLowerCase().match(/android/) && 0) {\n            let time = 0;\n            let isMove = false;\n            return [\n                {\n                    eventName: 'touchstart',\n                    listener: (event) => {\n                        time = Date.now();\n                    }\n                },\n                {\n                    eventName: 'touchmove',\n                    listener: (event) => {\n                        isMove = true;\n                    }\n                },\n                {\n                    eventName: 'touchend',\n                    listener: (event) => {\n                        !isScroll && !isMove && (Date.now() - time < 200) && fn(event);\n                        isMove = false;\n                    }\n                },\n            ];\n        }\n        else {\n            return [{\n                    eventName: 'click',\n                    listener: fn\n                }];\n        }\n    }\n};\n/**\n * 添加事件别名\n * @param eventName\n * @param fn\n */\nexport function addEventAlias(eventName, fn) {\n    eventAlias[eventName] = fn;\n}\nexport function delEventAlias(eventName) {\n    delete eventAlias[eventName];\n}\nexport default eventAlias;\n","import handleClass, { testClass } from \"./handleClass\";\n/**\n * 判断dom是否可以异步卸载\n * @param vdom\n */\nexport function handleLeave(vdom) {\n    const { leaveTime } = vdom.ast.props;\n    if (vdom.dom && leaveTime && testClass(vdom, 'leave')) {\n        // vdom.dom.className += ` ${leaveClass}`\n        Object.keys(vdom.ast.props).forEach(key => {\n            handleClass(vdom, vdom.ctxs, key, 'leave');\n        });\n        setTimeout(() => {\n            vdom.dom && vdom.dom.parentElement && vdom.dom.parentElement.removeChild(vdom.dom);\n        }, +leaveTime);\n        return false;\n    }\n    return true;\n}\n/**\n * dom加载成功后，同步做某些事情\n * @param vdom\n */\nexport function handleEnter(vdom) {\n    if (vdom.dom && testClass(vdom, 'enter')) {\n        Object.keys(vdom.ast.props).forEach(key => {\n            handleClass(vdom, vdom.ctxs, key, 'enter');\n        });\n    }\n}\n","import { handleLeave } from \"./domLifeCycle\";\n// 因为AST与真实的dom之间还存在差距，因此我们在AST的基础之上，根据指令等其他条件又生成了一个真实DOM的映射树\n// 用来处理DOM的增删\n// 卸载元素/组件的时候，需要卸载相对应的事件/与数据监听\nexport function unmountNode(vdom, removeDOM = true) {\n    const _removeDOM = handleLeave(vdom);\n    vdom.children.forEach(i => unmountNode(i, removeDOM));\n    vdom.unmount();\n    // 如果vdom上有leave leaveTime\n    removeDOM && _removeDOM && vdom.dom && vdom.dom.parentElement && vdom.dom.parentElement.removeChild(vdom.dom);\n    if (vdom.parent) {\n        vdom.parent.children = vdom.parent.children.filter(i => i !== vdom);\n    }\n}\n/**\n * 卸载子元素\n * @param {any} ele\n */\nexport function unmountChildren(node) {\n    node.children.forEach(child => {\n        unmountNode(child);\n    });\n    node.children = [];\n}\n","import { getType, isString } from \"./util\";\nexport default function handleStyle(style) {\n    switch (getType(style)) {\n        case 'string': {\n            return style;\n        }\n        case 'array': {\n            return style.map(handleStyle).join(';');\n        }\n        case 'object': {\n            return Object.entries(style).map(([key, value]) => {\n                if (isString(value)) {\n                    const KEY = key.replace(/[A-Z]/g, $1 => '-' + $1.toLowerCase());\n                    return `${KEY}: ${value}`;\n                }\n                return '';\n            }).filter(i => i).join(';');\n        }\n        default: {\n            return '';\n        }\n    }\n}\n","import { VirtualDOM } from \"./d\";\nimport { observer, addObserve } from './autorun';\nimport { execExpr } from \"./execExpr\";\nimport { getType, isPromise, getComponent, getParentCtx } from './util';\nimport diff from './diff';\nimport render from './render';\nimport handleClass from \"./handleClass\";\nimport eventAlias from \"./eventAlias\";\nimport Component from \"./Component\";\nimport { unmountChildren, unmountNode } from \"./unmount\";\nimport handleStyle from \"./handleStyle\";\nimport { handleEnter } from \"./domLifeCycle\";\nfunction handleVFor(value, element, ctxs, vdom, node) {\n    const [itemIndex, arrName] = value.split(' in ').map(i => i.trim());\n    const [itemName, indexName] = itemIndex.replace(/(^\\s*\\()|(\\)\\s*$)/g, '').split(',').map(i => i.trim());\n    let isExeced = false; // 是否执行过\n    let cacheKeys = [];\n    let cacheKeyVdom = {};\n    vdom.exprs.push(execExpr(arrName, ctxs, (newValue, oldValue = []) => {\n        // console.log('数组发生变化', arrName, newValue.length, oldValue.length)\n        // v-for只应该含有一个子元素\n        if (node.children.length > 1) {\n            console.error(`v-for just should have one child`);\n        }\n        // diff cache key\n        const keyValue = node.children[0] && (node.children[0].props['key'] || node.children[0].props[':key']);\n        const newKeyValue = newValue.map((item, index) => {\n            let key;\n            execExpr(keyValue, [\n                ...ctxs,\n                {\n                    [itemName]: item,\n                    [indexName]: index,\n                }\n            ], (newValue, oldValue) => {\n                key = newValue;\n            })();\n            return {\n                key,\n                item,\n            };\n        });\n        const newKyes = newKeyValue.map(i => i.key);\n        const { add, del } = diff(cacheKeys, newKyes, keyValue);\n        // console.log('数组更新:', newValue, add, del)\n        if (isExeced) {\n            // 存在key，卸载需要删除的key对应的vdom，否则整体卸载\n            keyValue\n                ? del.arr.forEach(key => {\n                    unmountChildren(cacheKeyVdom[key].vdom);\n                    delete cacheKeyVdom[key]; // 删除缓存\n                })\n                : unmountChildren(vdom);\n        }\n        cacheKeys = newKyes;\n        isExeced = true;\n        // 我们只处理 移除 + 头尾新增的情况\n        // key不发生变化的需要更新index\n        // key新增的还是需要新增 \n        const childNode = element.childNodes && element.childNodes[0];\n        newKeyValue.forEach((keyItem, index) => {\n            const { key, item } = keyItem;\n            // 不存在就新增，存在就更新\n            if (!cacheKeyVdom[key]) {\n                const observeIndexItem = observer({\n                    [itemName]: item,\n                    [indexName]: index,\n                });\n                const PE = add.before.arr.includes(key) ? {\n                    appendChild: (newNode) => {\n                        childNode ? element.insertBefore(newNode, childNode) : element.appendChild(newNode);\n                        return newNode;\n                    }\n                } : element;\n                const result = transform(node, PE, [...ctxs, observeIndexItem], vdom);\n                // 如果没有key就不要加入缓存了\n                if (keyValue) {\n                    cacheKeyVdom[key] = {\n                        vdom: result,\n                        observeIndexItem,\n                    };\n                }\n            }\n            else {\n                cacheKeyVdom[key].observeIndexItem[indexName] = index;\n                cacheKeyVdom[key].observeIndexItem[itemName] = item;\n            }\n        });\n    }));\n}\n/**\n * 添加属性\n *\n * @param {HTMLElement} element\n * @param {any} node\n * @param {array} ctxs\n * @returns\n */\nfunction addProperties(element, vdom, ctxs) {\n    const { ast: node } = vdom;\n    const info = {\n        transformChildren: true,\n    };\n    Object.keys(node.props).forEach(key => {\n        const value = node.props[key];\n        // 处理class\n        if (handleClass(vdom, ctxs, key))\n            return;\n        // 处理事件绑定\n        if (key.startsWith('@')) {\n            const KEY = key.slice(1);\n            let aliasListeners = [];\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                if (eventAlias[KEY]) {\n                    // 使用事件别名\n                    aliasListeners.forEach(aliasListener => {\n                        vdom.events.off(element, aliasListener.eventName, aliasListener.listener);\n                    });\n                    aliasListeners = eventAlias[KEY](newValue);\n                    aliasListeners.forEach(aliasListener => {\n                        vdom.events.on(element, aliasListener.eventName, aliasListener.listener);\n                    });\n                }\n                else {\n                    vdom.events.off(element, KEY, oldValue);\n                    vdom.events.on(element, KEY, newValue);\n                }\n            }));\n        }\n        else if (key.startsWith(':')) {\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                const KEY = key.slice(1);\n                if (node.tagName == 'input' && KEY == 'checked') {\n                    element[KEY] = newValue;\n                    return;\n                }\n                if (KEY === 'style') {\n                    newValue = handleStyle(newValue);\n                }\n                element.setAttribute(KEY, newValue);\n            }));\n        }\n        else if (key.startsWith('v-')) {\n            // 显示\n            if (key === 'v-show') {\n                vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                    element.style.cssText += `;display: ${newValue ? 'block' : 'none'};`;\n                }));\n            }\n            else if (key === 'v-for') {\n                info.transformChildren = false;\n                handleVFor(value, element, ctxs, vdom, node);\n            }\n        }\n        else if (key === 'ref') {\n            switch (getType(value)) {\n                case 'string': {\n                    ctxs[0].refs[value] = element;\n                    break;\n                }\n                case 'function': {\n                    value();\n                    break;\n                }\n            }\n        }\n        else {\n            element.setAttribute(key, node.props[key]);\n        }\n    });\n    return info;\n}\n/**\n * 处理v-if命令\n *\n * @param {HTMLElement} parent\n * @param {any} node\n * @param {array} ctxs\n */\nfunction handleVIf(parent, node, ctxs, parentVdom) {\n    let commentHook = document.createComment('v-if 占位');\n    parent.appendChild(commentHook);\n    let collect = [];\n    const destroy = parentVdom.exprs.push(execExpr(node.props['v-if'], ctxs, (newValue, oldValue) => {\n        if (newValue) {\n            addElement((ele, vdom) => {\n                vdom && collect.push(vdom);\n                ele && commentHook.parentElement && commentHook.parentElement.insertBefore(ele, commentHook);\n            }, node, ctxs, parentVdom);\n        }\n        else {\n            // 如果node\n            collect.forEach(i => unmountNode(i));\n            collect = [];\n        }\n    }));\n}\n/**\n * 获取自定义组件属性\n * @param node\n * @param vdom\n * @param ctxs\n */\nfunction getProps(vdom, ctxs) {\n    const { ast: node } = vdom;\n    let newProps = {};\n    Object.keys(node.props).forEach(key => {\n        const value = node.props[key];\n        if (/^[@:]/.test(key)) {\n            const KEY = key.slice(1);\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                // 如果key为props，则对props进行rest操作，方便子组件对数据的获取\n                if (KEY === 'props') {\n                    Object.entries(newValue).forEach(([k, v]) => {\n                        addObserve(newProps, k, v);\n                    });\n                }\n                else {\n                    newProps[KEY] = newValue;\n                }\n            }));\n        }\n        else {\n            newProps[key] = value;\n        }\n    });\n    // 元素传递\n    newProps['children'] = {\n        node,\n        ctxs,\n    };\n    newProps = observer(newProps);\n    return newProps;\n}\nexport function isComponent(component, ast) {\n    if (component && (component.prototype instanceof Component || isPromise(component))) {\n        return true;\n    }\n    console.error(component, `${ast.tagName} should be a Component!!! 您可以在组件的Components属性中添加子组件，或者通过Fv.register注册全局组件`);\n    return false;\n}\n/**\n * 添加元素\n *\n * @param {function} appendFn\n * @param {any} node\n * @param {array} ctxs\n * @returns\n */\nfunction addElement(appendFn, ast, ctxs, parentVdom) {\n    const vdom = new VirtualDOM(parentVdom);\n    vdom.ast = ast;\n    vdom.ctxs = ctxs;\n    if (/^[A-Z]/.test(ast.tagName)) {\n        // 处理子组件\n        const Com = getComponent(ast.tagName, ctxs);\n        // 判断是否是Component的子类\n        if (isComponent(Com, ast)) {\n            appendFn(undefined, vdom);\n            function renderComponent(Com) {\n                // 因为有可能是异步获取组件，因此这里对vdom进行判断，vdom是否已经被卸载\n                if (vdom.unmounted) {\n                    console.log('vdom已被卸载，不执行渲染');\n                    return;\n                }\n                // 通过创建一个Comment占位节点，可实无root渲染\n                const com = render(Com, getProps(vdom, ctxs), {\n                    appendChild: appendFn,\n                }, vdom);\n                com.parent = getParentCtx(ctxs);\n                com.parent.children.push(com);\n                vdom.component = com;\n                // 添加ref\n                if (ast.props.ref) {\n                    ctxs[0].refs[ast.props.ref] = com;\n                }\n            }\n            // 如果是Promise，可执行懒加载\n            if (isPromise(Com)) {\n                Com.then(Com => {\n                    renderComponent(Com);\n                });\n            }\n            else {\n                renderComponent(Com);\n            }\n        }\n    }\n    else if (ast.tagName == 'slot') {\n        // 处理slot，获取children后，并不监听变化\n        execExpr('props.children', ctxs, (newValue) => {\n            transform(newValue.node, {\n                appendChild: appendFn,\n            }, [getProps(vdom, ctxs), ...newValue.ctxs], parentVdom);\n        })();\n    }\n    else {\n        let createE = document.createElement(ast.tagName);\n        vdom.dom = createE;\n        appendFn(createE, vdom);\n        const result = addProperties(createE, vdom, ctxs);\n        handleEnter(vdom); // 处理enter-class\n        result.transformChildren && ast.children && ast.children.length && transform(ast, createE, ctxs, vdom);\n    }\n    return vdom;\n}\n// \n/**\n * ast transform to node\n *\n * @param {any} ast\n * @param {HTMLElement} element\n * @param {anray} ctxs\n */\nfunction transform(ast, element, ctxs, parentVdom = new VirtualDOM()) {\n    const vdoms = ast.children.map(node => {\n        if (node.type === 'element' || node.type === 'component') {\n            // 处理v-if指令\n            if (node.props['v-if']) {\n                handleVIf(element, node, ctxs, parentVdom);\n            }\n            else {\n                return addElement((createE) => {\n                    createE && element.appendChild(createE);\n                }, node, ctxs, parentVdom);\n            }\n        }\n        else {\n            const vdom = new VirtualDOM(parentVdom);\n            vdom.ast = ast;\n            vdom.ctxs = ctxs;\n            let createE;\n            if (node.type === 'expr') {\n                createE = document.createTextNode('');\n                element.appendChild(createE);\n                vdom.exprs.push(execExpr(node.value, ctxs, (newValue) => {\n                    createE.textContent = newValue;\n                }));\n            }\n            else {\n                createE = document.createTextNode(node.value);\n                element.appendChild(createE);\n            }\n            vdom.dom = createE;\n            parentVdom.children.push(vdom);\n            return vdom;\n        }\n    }).filter(i => i);\n    return {\n        children: vdoms\n    };\n}\nexport default transform;\n","import toAST from './ast';\nimport transform from './transform';\nimport { observer, addObserve, autorun } from './autorun';\n/**\n * @param {any} Com\n * @param {*} props\n * @param {HTMLElement} dom\n * @returns {Component}\n */\nexport default function render(Com, props, dom, vdom) {\n    const ctx = new Com();\n    // state 与 props 属性不可被更改\n    Object.defineProperty(ctx, 'state', {\n        writable: false,\n        enumerable: true,\n        value: observer(ctx.state, { deep: true }),\n    });\n    Object.defineProperty(ctx, 'props', {\n        writable: false,\n        enumerable: true,\n        value: observer(props),\n    });\n    // 处理需要有个autorun包裹，然后\n    // 需要obersev\n    Object.keys(ctx.computed).forEach(key => {\n        addObserve(ctx, key, ctx.computed[key].call(ctx));\n        // 待收集依赖\n        autorun(() => {\n            ctx[key] = ctx.computed[key].call(ctx);\n        });\n    });\n    ctx.willMount();\n    const ast = toAST(ctx.render());\n    ast.ctx = ctx;\n    transform(ast, dom, [ctx, ctx.state, ctx.props], vdom);\n    ctx.didMount();\n    return ctx;\n}\n","import Component from './Component';\nimport render from './render';\nimport { autorun, observer, isObserve, addObserve } from './autorun';\nimport register, { registerComponents } from \"./register\";\nimport { addEventAlias } from \"./eventAlias\";\nimport { addPipe } from \"./execExpr\";\nimport forceUpdate from \"./forceUpdate\";\nexport default {\n    Component,\n    render,\n    autorun,\n    observer,\n    isObserve,\n    addObserve,\n    register,\n    addEventAlias,\n    registerComponents,\n    addPipe,\n    forceUpdate,\n};\nexport { Component, render, autorun, observer, isObserve, addObserve, register, addEventAlias, registerComponents, addPipe, forceUpdate, };\n"],"names":["registerComponents","register","name","Com","getType","arg","Object","prototype","toString","call","match","toLowerCase","isFunction","args","every","isArray","isString","isPromise","toClassNames","v","map","join","keys","key","uniqueArr","arr","newArr","forEach","includes","item","push","bindContext","fn","ctx","bind","uuid","len","S","LEN","length","repeat","split","Math","round","random","getComponent","ctxs","i","components","getParentCtx","Component","template","state","props","children","refs","computed","$emit","data","parent","stopBubble","emit","$emitChildren","node","$emitSiblings","com","__willUnmount","willUnmount","filter","defaultProps","FVEvents","cache","element","addEventListener","_key","_fn","undefined","removeEventListener","VirtualDOM","exprs","events","unmounted","dom","HTMLElement","off","component","TokenElement","type","index","value","origin","ASTNode","tagName","test","selfCloseElements","M","SELF_CLOSE","CLOSE_START","TAG_CLOSE","OPEN_START","EQ","TAG_NAME","PROPERTY_NAME","PROPERTY_VALUE","EXPR","STRING","getToken","str","token","localStr","removePreSpace","space","slice","getPrev","next","matchStr","handleASTError","message","enter","row","column","lastIndexOf","error","toAST","root","currentNode","currentT","getT","localIndex","TAG_TYPE","last","queue","timeout","addExecQueue","list","setTimeout","timeEnd","forceUpdate","afterFn","haveExec","log","Observe","defaultCurrent","currentFn","Depends","ObserveId","id","addObserverId","newObj","__observeId__","defineProperty","isObserve","obj","__observe__","addObserve","defaultValue","options","deep","depends","isResetValue","collect","observer","assign","parentDepend","newValue","run","observeArr","concat","result","time","observeObj","autorun","callback","destoryDepends","destory","wrapFn","getDestory","pipes","addPipe","handlePipe","fns","getPipes","trim","execExprIm","expr","splitExpr","splitExprCache","exprArr","current","char","splitResult","inputExpr","names","body","reverse","input","Function","execExpr","oldValue","oldLen","isEqual","newLen","equal","diff","oldArr","isKeyExist","deleteArr","keepArr","addAll","prevIndex","add","INDEX","indexOf","start","end","updateClassName","classNames","className","testClass","vdom","ast","classProperties","some","handleClass","mclass","isScroll","window","eventAlias","event","keyCode","recodeKey","ctrl","navigator","userAgent","isMove","Date","now","addEventAlias","eventName","handleLeave","leaveTime","parentElement","removeChild","handleEnter","unmountNode","removeDOM","_removeDOM","unmount","unmountChildren","child","handleStyle","style","entries","KEY","replace","$1","handleVFor","itemIndex","arrName","itemName","indexName","isExeced","cacheKeys","cacheKeyVdom","keyValue","newKeyValue","newKyes","del","childNode","childNodes","keyItem","observeIndexItem","PE","before","newNode","insertBefore","appendChild","transform","addProperties","info","startsWith","aliasListeners","aliasListener","listener","on","setAttribute","cssText","transformChildren","handleVIf","parentVdom","commentHook","document","createComment","destroy","ele","getProps","newProps","k","isComponent","addElement","appendFn","renderComponent","render","ref","then","createE","createElement","vdoms","createTextNode","textContent","willMount","didMount"],"mappings":"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"}