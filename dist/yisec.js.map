{"version":3,"file":"yisec.js","sources":["../lib/register.js","../lib/util.js","../lib/FVEvents.js","../lib/d.js","../lib/forceUpdate.js","../lib/config.js","../lib/autorun.js","../lib/parser/parseExpr.js","../lib/parser/parseFilter.js","../lib/execExpr.js","../lib/property/handleClass.js","../lib/domLifeCycle.js","../lib/unmount.js","../lib/Component.js","../lib/parser/parseTemplate.js","../lib/eventAlias.js","../lib/property/handleStyle.js","../lib/directive/diff.js","../lib/directive/for.js","../lib/directive/if.js","../lib/transform.js","../lib/render.js","../lib/router.js","../lib/index.js"],"sourcesContent":["/**\n * 所有注册组件缓存\n */\nexport const registerComponents = {};\n/**\n * 添加全局组件\n * @param name\n * @param Com\n */\nexport default function register(name, Com) {\n    registerComponents[name] = Com;\n}\n","import { registerComponents } from \"./register\";\nimport Component from \"./Component\";\n/**\n * 获取数据类型\n * @param arg\n */\nexport function getType(arg) {\n    return Object.prototype.toString.call(arg).match(/\\s(.+)]/)[1].toLowerCase();\n}\nexport function isFunction(...args) {\n    return args.every(arg => getType(arg) === 'function');\n}\nexport function isArray(...args) {\n    return args.every(arg => getType(arg) === 'array');\n}\nexport function isObject(...args) {\n    return args.every(arg => getType(arg) === 'object');\n}\nexport function isString(...args) {\n    return args.every(arg => getType(arg) === 'string');\n}\nexport function isBool(...args) {\n    return args.every(arg => getType(arg) === 'boolean');\n}\nexport function isPromise(...args) {\n    return args.every(arg => getType(arg) === 'promise');\n}\n/**\n * 转classname\n * @param v\n */\nexport function toClassNames(v) {\n    switch (getType(v)) {\n        case 'array': {\n            return v.map(toClassNames).join(' ');\n        }\n        case 'object': {\n            return Object.keys(v).map(key => {\n                return v[key] ? key : '';\n            }).join(' ');\n        }\n        case 'string': {\n            return v;\n        }\n        default: {\n            return '';\n        }\n    }\n}\n// setTimeout的封装\nexport function ST(fn, time) {\n    if (time > 0) {\n        setTimeout(fn, time);\n    }\n    else {\n        fn();\n    }\n}\n// 移除重复元素\nexport function uniqueArr(arr = []) {\n    const newArr = [];\n    arr.forEach(item => {\n        if (!newArr.includes(item)) {\n            newArr.push(item);\n        }\n    });\n    return newArr;\n}\nexport function merge(...anys) {\n    const base = anys[0];\n    anys.slice(1).forEach(any => {\n        Object.keys(any).forEach(key => {\n            if (base[key] === undefined) {\n                base[key] = any[key];\n            }\n        });\n    });\n    return base;\n}\n/**\n * 绑定this\n * @param fn\n * @param ctx\n */\nexport function bindContext(fn, ctx) {\n    if (getType(fn).includes('function')) {\n        fn = fn.bind(ctx);\n    }\n    return fn;\n}\nexport function uuid(len = 8) {\n    const S = '0123456789qwertyuioopasdfghjklzxcvbnmQWERTYUIOOPASDFGHJKLZXCVBNM';\n    const LEN = S.length;\n    return ' '.repeat(len).split('').map(() => S[Math.round(Math.random() * LEN)]).join('');\n}\nexport function getComponent(name = '', ctxs = []) {\n    for (let i = 0; i < ctxs.length; i++) {\n        if (ctxs[i].components && ctxs[i].components[name]) {\n            return ctxs[i].components[name];\n        }\n    }\n    return registerComponents[name];\n}\nexport function getParentCtx(ctxs = []) {\n    for (let i = 0; i < ctxs.length; i++) {\n        if (ctxs[i] instanceof Component) {\n            return ctxs[i];\n        }\n    }\n}\n// 如果arr中存在keys中的元素，那么keys中的元素排序提前\nexport function resortArr(arr = [], keys = []) {\n    const newArr = [];\n    keys.forEach(i => {\n        if (arr.includes(i)) {\n            newArr.push(i);\n        }\n    });\n    arr.forEach(i => {\n        if (!keys.includes(i)) {\n            newArr.push(i);\n        }\n    });\n    return newArr;\n}\nexport function isComponent(component, ast) {\n    if (isPromise(component) || isFunction(component) || isString(component)) {\n        return true;\n    }\n    console.error(component, `${ast.tagName} should be a Component!!! 您可以在组件的Components属性中添加子组件，或者通过Fv.register注册全局组件`);\n    return false;\n}\n","/**\n * FVEvents 被用来统一处理事件监听\n * 待对事件统一代理处理，类jQuery形式\n * 现在，我们还是没有对事件进行全局挂载处理，而是在每个dom上绑定事件，性能较差，待优化\n */\nexport default class FVEvents {\n    constructor() {\n        this.cache = [];\n    }\n    /**\n     * 事件绑定\n     */\n    on(element, key, fn) {\n        this.cache.push([key, fn]);\n        element.addEventListener(key, fn);\n        return this;\n    }\n    /**\n     * 事件移除\n     */\n    off(element, key, fn) {\n        this.cache = this.cache.filter(([_key, _fn]) => {\n            if ((key === _key && fn === _fn) // 卸载指定key,fn的事件\n                || (key === _key && fn === undefined) // 卸载指定key的事件\n                || (key === undefined && fn === undefined) // 卸载所有事件\n            ) {\n                element.removeEventListener(_key, _fn);\n                return false;\n            }\n        });\n        return this;\n    }\n}\n","import FVEvents from \"./FVEvents\";\nexport class VirtualDOM {\n    constructor(parent) {\n        this.exprs = [];\n        this.events = new FVEvents();\n        this.children = [];\n        this.ctxs = [];\n        this.unmounted = false;\n        this.classNames = {};\n        if (parent) {\n            this.parent = parent;\n            this.parent.children.push(this);\n        }\n    }\n    unmount() {\n        this.exprs.forEach(fn => fn());\n        (this.dom instanceof HTMLElement) && this.events.off(this.dom);\n        this.component && this.component.__willUnmount();\n        this.unmounted = true;\n    }\n}\nexport class TokenElement {\n    constructor(type, index, value, origin = value) {\n        this.type = type;\n        this.index = index;\n        this.value = value;\n        this.origin = origin;\n    }\n}\n/**\n * AST节点\n * @class ASTNode\n */\nexport class ASTNode {\n    constructor(tagName = '') {\n        this.children = []; // 子节点\n        this.props = {}; // props\n        this.type = 'element'; // 节点类型\n        this.exprs = [];\n        this.isSVG = false; // 是不是svg节点\n        this.tagName = tagName;\n        // 判断是不是组件\n        if (/^[A-Z]/.test(tagName)) {\n            this.type = 'component';\n        }\n    }\n}\n","let queue = [];\nlet timeout;\nlet isUpdating = false;\nexport function addUpdateQueue(list = [], key) {\n    // return list.forEach(fn => fn())\n    if (isUpdating) {\n        // 如果已进入更新之中，则所有因为更新加入队列之中的任务都会立即执行\n        list.forEach(fn => fn());\n        return;\n    }\n    clearTimeout(timeout);\n    queue.push(...list);\n    // setTimeout执行时间明显比0ms要长很多，但是Performance并没有记录函数执行\n    // 经排查发现是mac上chrome的页面滚动阻塞了异步事件的执行\n    timeout = setTimeout(forceUpdate, 0);\n}\nexport default function forceUpdate(afterFn = () => { }) {\n    // console.log('setTimeout等待时长', Date.now() - realtime)\n    isUpdating = true;\n    const haveExec = [];\n    queue.forEach(fn => {\n        // 查看是否执行\n        if (!haveExec.includes(fn)) {\n            haveExec.push(fn);\n            fn();\n        }\n    });\n    isUpdating = false;\n    queue = [];\n    // console.log('执行时长', Date.now() - time)\n    afterFn();\n}\n","// yisec指令前缀\nexport const DIRECTIVEPREV = 'ys:';\n// 组件挂载到dom上的key\nexport const COMPONENT_DOM_HOOK = '__yisec_component_hook__';\nexport const OBSERVE_ID = '__observeID__';\n","import { getType, bindContext, uuid, isArray, isFunction } from \"./util\";\nimport { addUpdateQueue } from \"./forceUpdate\";\nimport { OBSERVE_ID } from \"./config\";\nexport class Observe {\n}\nconst defaultCurrent = () => () => { };\n// observer数据get时，进行依赖手机\nlet currentFn = defaultCurrent;\nexport function resetCurrentFn() {\n    currentFn = defaultCurrent;\n}\n/**\n * 依赖\n * @class Depends\n */\nexport class Depends {\n    constructor(root, key) {\n        this.list = [];\n        this.root = root;\n        this.key = key;\n    }\n    collect() {\n        if (currentFn !== defaultCurrent) {\n            currentFn((fn) => {\n                // 获取依赖函数，并返回移除依赖函数\n                !this.list.includes(fn) && this.list.push(fn);\n                return () => {\n                    this.list = this.list.filter(i => i !== fn);\n                };\n            }, this);\n        }\n    }\n    run(key) {\n        addUpdateQueue(this.list, this.key);\n    }\n}\nclass ObserveId {\n    constructor() {\n        this.id = uuid() + ObserveId.id++;\n        this.keys = [];\n    }\n}\nObserveId.id = 0;\nfunction addObserverId(newObj) {\n    if (newObj[OBSERVE_ID] instanceof ObserveId) {\n        return;\n    }\n    Object.defineProperty(newObj, OBSERVE_ID, {\n        value: new ObserveId(),\n        configurable: false,\n        writable: false,\n        enumerable: false,\n    });\n}\nexport function addObserve(ctx, key, defaultValue = ctx[key], options = { deep: false }) {\n    addObserverId(ctx);\n    // 这里隐含了一个bug，如果state,prop被更改，就懵逼了，因此设置state、props writable: false\n    if (ctx[OBSERVE_ID].keys.includes(key)) {\n        ctx[key] = defaultValue; // 数据已监听，则更新\n        return;\n    }\n    else {\n        ctx[OBSERVE_ID].keys.push(key);\n    }\n    let value = bindContext(defaultValue, ctx);\n    // 依赖此key的函数\n    const depends = new Depends(ctx, key);\n    let isResetValue = true;\n    // 默认bind this\n    Object.defineProperty(ctx, key, {\n        get() {\n            // 收集依赖\n            depends.collect();\n            // 只有在被获取的时候，才会对数据进行observe\n            if (isResetValue && options.deep) {\n                value = observer(value, Object.assign({}, options, { parentDepend: depends }));\n            }\n            isResetValue = false;\n            return value;\n        },\n        set(newValue) {\n            // 每次值更新都会触发更新\n            isResetValue = true;\n            value = bindContext(newValue, ctx);\n            // 触发依赖函数更新\n            depends.run();\n        },\n        enumerable: true,\n    });\n}\n/**\n * 监听数组\n * @param arr\n * @param parentDepends\n */\nexport function observeArr(arr = [], options) {\n    // 判断是否observe过\n    if (isObserve(arr)) {\n        return arr;\n    }\n    const newArr = arr.map(item => observer(item));\n    Object.defineProperty(newArr, OBSERVE_ID, {\n        value: new ObserveId(),\n        enumerable: false,\n        writable: false,\n        configurable: false,\n    });\n    [\n        'splice',\n        'push',\n        'shift',\n        'unshift',\n        'pop',\n    ].forEach(key => {\n        const value = [][key].bind(newArr);\n        // 如果数组长度被修改，通知他的父元节点\n        Object.defineProperty(newArr, key, {\n            get() {\n                return (...args) => {\n                    if (options.deep) {\n                        if (key == 'push' || key == 'unshift') {\n                            args = args.map(i => observer(i));\n                        }\n                        else if (key == 'splice') {\n                            args = args.slice(0, 2).concat(args.slice(2).map(i => observer(i)));\n                        }\n                    }\n                    const result = value(...args);\n                    // 对于数组的变化，直接出发调用数组的依赖\n                    options.parentDepend && options.parentDepend.run();\n                    return result;\n                };\n            },\n            enumerable: false,\n        });\n    });\n    return newArr;\n}\n/**\n * 监听对象\n * @param obj\n * @param init\n */\nexport function observeObj(obj = {}, options) {\n    let newObj = new Observe();\n    // 添加id\n    addObserverId(newObj);\n    Object.keys(obj).forEach(key => {\n        addObserve(newObj, key, obj[key], options);\n    });\n    return newObj;\n}\nexport function isObserve(obj) {\n    return (obj instanceof Observe) || (isArray(obj) && obj[OBSERVE_ID] instanceof Observe);\n}\n/**\n * 构造一个新的observe对象\n * @param {objet} obj\n * @returns\n */\nexport function observer(obj, options = { deep: false }) {\n    if (isObserve(obj)) {\n        return obj;\n    }\n    switch (getType(obj)) {\n        case 'array':\n            return observeArr(obj, options);\n        case 'object':\n            return observeObj(obj, options);\n        default:\n            return obj;\n    }\n}\nexport function observerDeep(obj) {\n    return observer(obj, { deep: true });\n}\n/**\n * 接受函数，当依赖的数据发生变化后，会立即执行函数\n *\n * @param {function} fn\n * @returns\n */\nexport function autorun(fn, options = {}) {\n    let destoryDepends = [];\n    let depends = [];\n    // 销毁依赖\n    const destory = () => {\n        destoryDepends.forEach(fn => fn());\n        destoryDepends = [];\n        depends.splice(0, depends.length);\n    };\n    destory.depends = depends;\n    const wrapFn = () => {\n        // 显示之前依赖\n        // console.log('before', depends.map(i => i.key))\n        destory(); // 销毁上次依赖监听\n        // 收集本次依赖\n        currentFn = (getDestory, depend) => {\n            destoryDepends.push(getDestory(wrapFn));\n            depends.push(depend);\n            return wrapFn;\n        };\n        const result = fn();\n        // 重置回默认值\n        resetCurrentFn();\n        // 显示之前依赖\n        // console.log('after', depends.map(i => i.key))\n        isFunction(options.callback) && options.callback(result);\n    };\n    wrapFn.options = options;\n    // 立即执行\n    wrapFn();\n    return destory;\n}\n","import { uniqueArr } from \"./../util\";\nconst parseExpr = (() => {\n    const cache = {};\n    return function parseExpr(body) {\n        if (cache[body]) {\n            return cache[body];\n        }\n        // 去除字符串，剩下的都是变量\n        // 对于关键字new 和 对象的支持很懵逼\n        let params = (body.replace(/'[^']*'|\"[^\"]*\"/g, ' ') // 移除字符串 'ddd' \"ddd\"\n            .replace(/([A-Za-z_$][A-Za-z0-9_$]*\\s*)?:/g, '') // 移除对象key { aa: }\n            .match(/\\.?[A-Za-z_$][A-Za-z0-9_$]*\\s*/g) || [] // 获取所有变量 .?aa\n        ).filter(i => !/^\\.|new\\s+/.test(i)) // 去除.aa new\n            .map(i => i.trim()); // 去除空格\n        params = uniqueArr(params);\n        const result = {\n            params,\n            body,\n            fn: new Function(...params, `return ${body}`)\n        };\n        cache[body] = result;\n        return result;\n    };\n})();\nexport default parseExpr;\n","// 分割表达式，只处理不重复的分隔符|\nconst parseFilter = (function () {\n    let parseFilterCache = {};\n    return function parseFilter(str = '') {\n        if (parseFilterCache[str]) {\n            return parseFilterCache[str];\n        }\n        const exprArr = [];\n        let current = '';\n        let index = 0;\n        while (index < str.length) {\n            const char = str[index];\n            if (char === '|'\n                && !/\\|\\s*$/.test(current)\n                && !/^\\s*\\|/.test(str.slice(index + 1))) {\n                exprArr.push(current);\n                current = '';\n            }\n            else {\n                current += char;\n            }\n            index += 1;\n        }\n        exprArr.push(current);\n        const result = {\n            expr: exprArr[0],\n            pipes: exprArr.slice(1).map(i => i.trim()).filter(i => i),\n        };\n        parseFilterCache[str] = result;\n        return result;\n    };\n}());\nexport default parseFilter;\n","import { autorun } from \"./autorun\";\nimport { isArray } from './util';\nimport parseExpr from './parser/parseExpr';\nimport parseFilter from './parser/parseFilter';\nconst pipes = [];\nexport function addPipe(...ctxs) {\n    pipes.push(...ctxs);\n}\n/**\n * pipe 上一个函数返回结果作为下一个函数的输入\n * @param fns\n */\nfunction handlePipe(...fns) {\n    return (arg) => {\n        let result = arg;\n        fns.forEach(fn => {\n            result = fn(result);\n        });\n        return result;\n    };\n}\nfunction getPipes(exprs, ctxs) {\n    return handlePipe(...exprs.map(expr => execExprIm(expr, [...ctxs, ...pipes, window])));\n}\n/**\n * 从作用域链中获取指定key的值\n * @param key\n * @param ctxs\n */\nfunction getValue(key, ctxs) {\n    for (let i = 0; i < ctxs.length; i++) {\n        if (ctxs[i].hasOwnProperty(key) || ctxs[i][key] !== undefined) {\n            return ctxs[i][key];\n        }\n    }\n    if (key === 'true') {\n        return true;\n    }\n    if (key === 'false') {\n        return false;\n    }\n    return window[key];\n}\nexport function execExprIm(expr = '', ctxs) {\n    const { expr: inputExpr, pipes: pipeExprs } = parseFilter(expr);\n    // 我们不合并对象，因为对象可能是observable的，这里通过with嵌套的形式\n    const parseResult = parseExpr(inputExpr);\n    const input = parseResult.fn(...parseResult.params.map(key => getValue(key, ctxs)));\n    // with语句的性能太差，弃之\n    // const names = ctxs.map((i, index) => '__with__local__' + index)\n    // let body = `return ${inputExpr}`\n    // names.reverse().forEach(i => {\n    //     body = `with (${i}) {\n    //         ${body}\n    //      }`\n    // })\n    // const input = new Function(...names, body)(...ctxs)\n    if (pipes.length >= 1) {\n        return getPipes(pipeExprs, ctxs)(input);\n    }\n    return input;\n}\n/**\n * 执行表达式\n * @param {string} expr\n * @param {any[]} ctxs\n * @param {(result: any) => void} fn\n * @returns\n */\nexport function execExpr(expr, ctxs, fn, transform = false) {\n    let oldValue;\n    let oldLen;\n    let newValueCache;\n    let execTime = 0;\n    function isEqual(newValue, oldValue) {\n        if (newValue !== oldValue) {\n            return false;\n        }\n        // 数组一直变化\n        if (isArray(newValue)) {\n            return false;\n        }\n        return true;\n    }\n    return fn && autorun(() => {\n        return execExprIm(expr, ctxs);\n    }, {\n        callback: newValue => {\n            oldValue = newValueCache;\n            newValueCache = newValue;\n            const equal = isEqual(newValue, oldValue);\n            if (!isEqual(newValue, oldValue)) {\n                execTime += 1;\n                fn(newValue, oldValue, execTime);\n            }\n        },\n        expr,\n    });\n}\nexport function asyncExecExpr(expr, ctxs, fn) {\n    return execExpr(expr, ctxs, fn, true);\n}\n","import { execExpr } from \"./../execExpr\";\nimport { toClassNames } from \"./../util\";\nfunction updateClassName(element, classNames) {\n    element.className = Object.keys(classNames)\n        .map(key => classNames[key])\n        .map(i => i || '').join(' ').trim();\n}\nexport function testClass(vdom, type = '') {\n    const { ast, dom: element } = vdom;\n    type += (type ? '-' : '');\n    const classProperties = [\n        `@${type}class`,\n        `${type}class`,\n    ];\n    return Object.keys(ast.props).some(key => classProperties.includes(key));\n}\nfunction handleModuleCss(classNames, moduleMap) {\n    return classNames.trim().split(/\\s+/g).map(key => {\n        // 如果不存在key的映射，就返回key， 这样子即使用了module class也兼容了global class\n        return moduleMap[key] || key;\n    }).join(' ');\n}\n// class\n// enter-class\n// leave-class\n// \nexport default function handleClass(vdom, ctxs, key, type = '') {\n    const { ast: node, dom: element } = vdom;\n    const value = node.props[key];\n    const { classNames } = vdom;\n    const { moduleCss } = ctxs[0];\n    type += (type ? '-' : '');\n    if (key === `:${type}class`) {\n        vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n            let classes = toClassNames(newValue);\n            if (moduleCss) {\n                classes = handleModuleCss(classes, moduleCss);\n            }\n            classNames[key] = classes;\n            updateClassName(element, classNames);\n        }));\n    }\n    else if (key === `${type}class`) {\n        let classes = value;\n        if (moduleCss) {\n            classes = handleModuleCss(classes, moduleCss);\n        }\n        classNames[key] = classes;\n        updateClassName(element, classNames);\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n","import handleClass, { testClass } from \"./property/handleClass\";\n/**\n * 判断dom是否可以异步卸载\n * @param vdom\n */\nexport function handleLeave(vdom) {\n    const { leaveTime } = vdom.ast.props;\n    if (vdom.dom && leaveTime && testClass(vdom, 'leave')) {\n        // vdom.dom.className += ` ${leaveClass}`\n        Object.keys(vdom.ast.props).forEach(key => {\n            handleClass(vdom, vdom.ctxs, key, 'leave');\n        });\n        setTimeout(() => {\n            vdom.dom && vdom.dom.parentElement && vdom.dom.parentElement.removeChild(vdom.dom);\n        }, +leaveTime);\n        return false;\n    }\n    return true;\n}\n/**\n * dom加载成功后，同步做某些事情\n * @param vdom\n */\nexport function handleEnter(vdom) {\n    if (vdom.dom && testClass(vdom, 'enter')) {\n        Object.keys(vdom.ast.props).forEach(key => {\n            handleClass(vdom, vdom.ctxs, key, 'enter');\n        });\n    }\n}\n","import { handleLeave } from \"./domLifeCycle\";\n// 组件卸载，其实不应该一个元素一个元素的从dom移除，而应该整体性移除\n// 因为AST与真实的dom之间还存在差距，因此我们在AST的基础之上，根据指令等其他条件又生成了一个真实DOM的映射树\n// 用来处理DOM的增删\n// 卸载元素/组件的时候，需要卸载相对应的事件/与数据监听\nexport function unmountNode(vdom, removeDOM = true) {\n    // 如果当前节点有真实dom映射，则子节点不再操作dom移除，提升性能\n    vdom.children.forEach(i => unmountNode(i, removeDOM && !vdom.dom));\n    vdom.unmount();\n    // 如果vdom上有leave leaveTime\n    if (removeDOM && vdom.dom && handleLeave(vdom)) {\n        vdom.dom.parentElement && vdom.dom.parentElement.removeChild(vdom.dom);\n    }\n    if (vdom.parent) {\n        vdom.parent.children = vdom.parent.children.filter(i => i !== vdom);\n    }\n}\n/**\n * 卸载子元素\n * @param {any} ele\n */\nexport function unmountChildren(vdom) {\n    vdom.children.forEach(child => {\n        unmountNode(child);\n    });\n    vdom.children = [];\n}\n","import { isFunction } from \"./util\";\nimport { VirtualDOM } from \"./d\";\nimport { unmountNode } from \"./unmount\";\nexport default class Component {\n    constructor() {\n        // 模板\n        this.template = '';\n        // 状态\n        this.state = {};\n        // props\n        this.props = {};\n        // 子组件\n        this.components = {};\n        // 子组件\n        this.children = [];\n        // 指定dom\n        this.refs = {};\n        this.vdom = new VirtualDOM();\n        // 方便template直接获取经过复杂计算的数据\n        this.computed = {};\n        // 触发props上的事件\n        this.$emit = (key, ...data) => {\n            let parent = this.parent;\n            let stopBubble = false;\n            while (!stopBubble && parent) {\n                const fn = parent.emit[key] || parent[key];\n                if (isFunction(fn)) {\n                    stopBubble = fn.call(parent, ...data) === false;\n                }\n                parent = parent.parent;\n            }\n        };\n        this.$emitChildren = (key, ...data) => {\n            function children(node) {\n                node.children.forEach(item => {\n                    const fn = item.emit[key] || item[key];\n                    isFunction(fn) && fn.call(item, ...data);\n                    children(item);\n                });\n            }\n            children(this);\n        };\n        this.$emitSiblings = (key, ...data) => {\n            this.parent && this.parent.children.forEach(item => {\n                if (item !== this) {\n                    const fn = item.emit[key] || item[key];\n                    isFunction(fn) && fn.call(item, ...data);\n                }\n            });\n        };\n        this.emit = {};\n    }\n    render() {\n        return this.template;\n    }\n    willMount() { }\n    didMount() { }\n    didUpdate() { }\n    // 内部方法，触发组件卸载\n    __willUnmount() {\n        this.children.forEach(com => com.__willUnmount());\n        this.willUnmount();\n        unmountNode(this.vdom);\n        this.children = [];\n        if (this.parent) {\n            this.parent.children = this.parent.children.filter(i => i !== this);\n        }\n    }\n    willUnmount() { }\n}\nComponent.defaultProps = {};\n","// 解析template\n// 有时候我们不想使用jsx，不想使用babel编译💊\n// 那就使用类似vue angular之类的字符串模板吧\n// 使用模板编译的好处有哪些？，模板本身可以作为资源加载，也就是View层\n// 自身的逻辑层可以作为控制器\n// 再加一个Model作为数据来源\nimport { ASTNode, TokenElement } from \"./../d\";\n/**\n * 半闭合标签 可以以 > 或 /> 结尾\n */\nconst selfCloseElements = ['img', 'br', 'hr', 'input'];\n// 我们应该在解析关键字的同时，保留原始字符串\nconst M = {\n    get SELF_CLOSE() {\n        return /^(\\/\\s*>)\\s*/;\n    },\n    get CLOSE_START() {\n        return /^(<\\s*\\/)\\s*/;\n    },\n    get TAG_CLOSE() {\n        return /^(>)\\s*/;\n    },\n    get OPEN_START() {\n        return /^(<)\\s*/;\n    },\n    get EQ() {\n        return /^(=)\\s*/;\n    },\n    get TAG_NAME() {\n        return /^([a-zA-Z]-?([a-zA-Z0-9]-?)*)\\s*/; // Ass-dd-09\n    },\n    get PROPERTY_NAME() {\n        return /^([a-zA-Z@:]-?([a-zA-Z0-9:]-?)*)\\s*/; // @:-aaaa\n    },\n    get PROPERTY_VALUE() {\n        return /^\"([^\"]*)\"\\s*|^{([^}]*)}\\s*/; // 支持 \"xxx\" {xc}\n    },\n    get EXPR() {\n        return /^{{2}(((?!}{2}).)*)\\}{2}\\s*/;\n    },\n    get STRING() {\n        return /^[\\s\\S][^<{]*/;\n    },\n};\n/**\n * 字符串转token\n *\n * @param {string} [str='']\n * @returns {TokenElement[]}\n */\nexport function getToken(str = '') {\n    const token = [];\n    let localStr = str;\n    let index = 0;\n    // closeStart\n    // 获取token，并记解析位置\n    function removePreSpace() {\n        const [space] = localStr.match(/^\\s+/) || [''];\n        index += space.length;\n        localStr = localStr.slice(space.length);\n    }\n    function getPrev(index) {\n        return token[token.length - index] || {};\n    }\n    function next() {\n        removePreSpace();\n        if (localStr.length == 0)\n            return;\n        // />\n        if (M.SELF_CLOSE.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.SELF_CLOSE) || ['', ''];\n            token.push(new TokenElement('SELF_CLOSE', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // </\n        if (M.CLOSE_START.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.CLOSE_START) || ['', ''];\n            token.push(new TokenElement('CLOSE_START', index, value));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // <\n        if (M.OPEN_START.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.OPEN_START) || ['', ''];\n            token.push(new TokenElement('OPEN_START', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // >\n        if (M.TAG_CLOSE.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.TAG_CLOSE) || ['', ''];\n            token.push(new TokenElement('TAG_CLOSE', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // =\n        if (M.EQ.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.EQ) || ['', ''];\n            token.push(new TokenElement('EQ', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // Aaa-bb 向前读一位需要是 OPEN_START | CLOSE_START\n        if (M.TAG_NAME.test(localStr)\n            && (getPrev(1).type == 'OPEN_START' || getPrev(1).type == 'CLOSE_START')) {\n            const [matchStr, value] = localStr.match(M.TAG_NAME) || ['', ''];\n            token.push(new TokenElement('TAG_NAME', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // :@Aaa-bb\n        if (M.PROPERTY_NAME.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.PROPERTY_NAME) || ['', ''];\n            token.push(new TokenElement('PROPERTY_NAME', index, value, matchStr));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n        // 属性value \"\"\n        if (M.PROPERTY_VALUE.test(localStr)\n            && getPrev(1).type == 'EQ' // 向前读一位需要是 EQ\n            && getPrev(2).type == 'PROPERTY_NAME' // 向前读2位需要是 PROPERTY_NAME\n        ) {\n            // 向前读，需要是\n            const [matchStr, strValue, value = strValue] = localStr.match(M.PROPERTY_VALUE) || ['', ''];\n            token.push(new TokenElement('PROPERTY_VALUE', index, value, matchStr));\n            index += matchStr.length;\n            localStr = localStr.slice(matchStr.length);\n            return next();\n        }\n        // 表达式\n        if (M.EXPR.test(localStr)) {\n            const [matchStr, value] = localStr.match(M.EXPR) || ['', ''];\n            token.push(new TokenElement('EXPR', index, value, matchStr));\n            index += matchStr.length;\n            localStr = localStr.slice(matchStr.length);\n            return next();\n        }\n        // 文本节点\n        if (M.STRING.test(localStr)) {\n            const [value] = localStr.match(M.STRING) || [''];\n            token.push(new TokenElement('STRING', index, value));\n            index += value.length;\n            localStr = localStr.slice(value.length);\n            return next();\n        }\n    }\n    next();\n    return token;\n}\n/**\n * 处理解析错误\n *\n * @param {any} token\n * @param {any} template\n * @param {any} message\n */\nfunction handleASTError(token, template, message) {\n    const str = template.slice(0, token.index);\n    const enter = str.match(/\\n/g);\n    const row = enter ? enter.length + 1 : 1;\n    const column = str.length - str.lastIndexOf('\\n');\n    console.error(`at row:${row} column:${column} \\n\\n${template.slice(token.index, token.index + 100)} \\n\\n${message}`);\n}\n// 读取元素\n// token[0].type == 'OPEN_START'\n// token[1].type == 'TAG_NAME'\n// token[2].type == 'TAG_NAME' *\n//     token[3].type == 'EQ' && token[4].type == 'PROPERTY_VALUE'\n// token[0].type == 'TAG_CLOSE' || token[0].type == 'SELF_CLOSE'\n//     Element\n// token[0].type == 'CLOSE_START'\n// token[1].type == 'TAG_NAME'\n// token[2].type == 'TAG_CLOSE'\nexport function toAST(token = [], template = '') {\n    const root = new ASTNode();\n    let currentNode = root;\n    let index = 0;\n    let currentT;\n    const LEN = token.length;\n    function getT(index) {\n        return token[index] || {};\n    }\n    next();\n    function next() {\n        if (index >= LEN)\n            return;\n        // 当前token\n        currentT = token[index];\n        // open tag | close self tag\n        if (currentT.type == 'OPEN_START'\n            && getT(index + 1).type == 'TAG_NAME') {\n            // 获取\n            let localIndex = index + 2;\n            const props = {};\n            const tagName = getT(index + 1).value;\n            while (getT(localIndex).type == 'TAG_NAME' || getT(localIndex).type == 'PROPERTY_NAME') {\n                if (getT(localIndex + 1).type == 'EQ') {\n                    if (getT(localIndex + 2).type == 'PROPERTY_VALUE') {\n                        props[getT(localIndex).value] = getT(localIndex + 2).value;\n                        localIndex += 3;\n                        continue;\n                    }\n                    else {\n                        handleASTError(getT(localIndex), template, `${getT(localIndex).value} should have a value`);\n                    }\n                }\n                props[getT(localIndex).value] = true;\n                localIndex += 1;\n            }\n            const TAG_TYPE = getT(localIndex).type;\n            if (TAG_TYPE == 'TAG_CLOSE' || TAG_TYPE == 'SELF_CLOSE') {\n                const node = new ASTNode(tagName);\n                node.props = props;\n                node.parent = currentNode;\n                currentNode.children.push(node);\n                if (TAG_TYPE === 'TAG_CLOSE' && !selfCloseElements.includes(tagName)) {\n                    currentNode = node;\n                }\n            }\n            index = localIndex + 1;\n        }\n        else if (currentT.type == 'CLOSE_START'\n            && getT(index + 1).type == 'TAG_NAME'\n            && getT(index + 2).type == 'TAG_CLOSE') {\n            if (currentNode.tagName !== getT(index + 1).value) {\n                handleASTError(getT(index + 1), template, `close tag name should be ${currentNode.tagName}, but now is ${getT(index + 1).value}`);\n            }\n            currentNode = currentNode.parent;\n            index += 3;\n        }\n        else {\n            const last = currentNode.children[currentNode.children.length - 1];\n            if (currentT.type == 'EXPR') {\n                const node = new ASTNode();\n                node.value = currentT.value;\n                node.type = 'expr';\n                node.parent = currentNode;\n                currentNode.children.push(node);\n            }\n            else if (last && last.type === 'text') {\n                last.value += currentT.value;\n            }\n            else {\n                const node = new ASTNode();\n                node.type = 'text';\n                node.value = currentT.origin || currentT.value || '';\n                node.parent = currentNode;\n                currentNode.children.push(node);\n            }\n            index++;\n        }\n        next();\n    }\n    return root;\n}\n// 处理svg节点\nfunction handleSVG(node, isSVG = false) {\n    if (isSVG || node.tagName === 'svg') {\n        isSVG = true;\n        node.isSVG = isSVG;\n    }\n    node.children.forEach(node => handleSVG(node, isSVG));\n    return node;\n}\nlet cache = {};\n// 字符串 => ast\nexport default function (template = '') {\n    // 使用缓存，不用再ast => dom的时候对ast进行修改\n    if (!cache[template]) {\n        const node = toAST(getToken(template), template);\n        // 为node添加isSVG标示\n        cache[template] = handleSVG(node);\n    }\n    return cache[template];\n}\n","let isScroll = false;\nlet timeout;\nwindow.addEventListener('scroll', () => {\n    isScroll = true;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n        isScroll = false;\n    }, 50);\n});\n// 事件别名\nconst eventAlias = {\n    enter: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 13) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    up: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 38) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    down: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 40) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    left: (fn) => ([\n        {\n            eventName: 'keydown',\n            listener: (event, ...args) => {\n                if (event.keyCode == 37) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    esc: (fn) => ([\n        {\n            eventName: 'keyup',\n            listener: (event, ...args) => {\n                if (event.keyCode == 27) {\n                    fn(event, ...args);\n                }\n            }\n        }\n    ]),\n    ctrlEnter: (fn) => {\n        const recodeKey = {\n            ctrl: false,\n            enter: false,\n        };\n        return ([\n            {\n                eventName: 'keydown',\n                listener: (event, ...args) => {\n                    if (event.keyCode == 13) {\n                        recodeKey.enter = true;\n                    }\n                    else if (event.keyCode == 17) {\n                        recodeKey.ctrl = true;\n                    }\n                    recodeKey.enter && recodeKey.ctrl && fn(...args);\n                }\n            },\n            {\n                eventName: 'keyup',\n                listener: (event, ...args) => {\n                    if (event.keyCode == 13) {\n                        recodeKey.enter = false;\n                    }\n                    else if (event.keyCode == 17) {\n                        recodeKey.ctrl = false;\n                    }\n                }\n            }\n        ]);\n    },\n    click: (fn) => {\n        if (window.navigator.userAgent.toLowerCase().match(/android/) && 0) {\n            let time = 0;\n            let isMove = false;\n            return [\n                {\n                    eventName: 'touchstart',\n                    listener: (event) => {\n                        time = Date.now();\n                    }\n                },\n                {\n                    eventName: 'touchmove',\n                    listener: (event) => {\n                        isMove = true;\n                    }\n                },\n                {\n                    eventName: 'touchend',\n                    listener: (event) => {\n                        !isScroll && !isMove && (Date.now() - time < 200) && fn(event);\n                        isMove = false;\n                    }\n                },\n            ];\n        }\n        else {\n            return [{\n                    eventName: 'click',\n                    listener: fn\n                }];\n        }\n    }\n};\n/**\n * 添加事件别名\n * @param eventName\n * @param fn\n */\nexport function addEventAlias(eventName, fn) {\n    eventAlias[eventName] = fn;\n}\nexport function delEventAlias(eventName) {\n    delete eventAlias[eventName];\n}\nexport default eventAlias;\n","import { getType, isString } from \"./../util\";\nexport default function handleStyle(style) {\n    switch (getType(style)) {\n        case 'string': {\n            return style;\n        }\n        case 'array': {\n            return style.map(handleStyle).join(';');\n        }\n        case 'object': {\n            // 可以处理一般的css3兼容性\n            return Object.entries(style).map(([key, value]) => {\n                if (isString(value)) {\n                    const KEY = key.replace(/[A-Z]/g, $1 => '-' + $1.toLowerCase());\n                    return `${KEY}: ${value}`;\n                }\n                return '';\n            }).filter(i => i).join(';');\n        }\n        default: {\n            return '';\n        }\n    }\n}\n","import { uniqueArr } from \"../util\";\nexport default function diff(oldArr = [], newArr = [], isKeyExist = true) {\n    newArr = uniqueArr(newArr);\n    // getDelete\n    let deleteArr = [];\n    let keepArr = [];\n    let deleteAll = false; // 是否删除所有元素\n    let addAll = false;\n    let prevIndex = -2;\n    let add;\n    if (!isKeyExist) {\n        return {\n            del: {\n                arr: oldArr,\n            },\n            add: {\n                before: {\n                    key: null,\n                    arr: newArr,\n                },\n                after: {\n                    key: null,\n                    arr: [],\n                }\n            },\n            noChange: false,\n        };\n    }\n    for (let i = 0; i < oldArr.length; i++) {\n        const item = oldArr[i];\n        const INDEX = newArr.indexOf(item);\n        // console.log(INDEX, item)\n        if (INDEX < 0) {\n            deleteArr.push(item);\n        }\n        else {\n            // 判断是否在newArr中连续出现\n            if (prevIndex !== -2 && prevIndex + 1 !== INDEX) {\n                deleteAll = true;\n                addAll = true;\n                deleteArr = oldArr;\n                keepArr = [];\n                break;\n            }\n            else {\n                keepArr.push(item);\n            }\n            prevIndex = INDEX;\n        }\n    }\n    if (addAll || !keepArr.length) {\n        add = {\n            before: {\n                key: null,\n                arr: newArr,\n            },\n            after: {\n                key: 0,\n                arr: [],\n            }\n        };\n    }\n    else {\n        const start = newArr.indexOf(keepArr[0]);\n        const end = newArr.indexOf(keepArr[keepArr.length - 1]);\n        add = {\n            before: {\n                key: keepArr[0],\n                arr: newArr.slice(0, start)\n            },\n            after: {\n                key: keepArr[keepArr.length - 1],\n                arr: newArr.slice(end + 1)\n            },\n        };\n    }\n    // 计算新增数组\n    return {\n        del: {\n            arr: deleteArr,\n        },\n        add,\n        noChange: add.before.arr.length === 0 && add.after.arr.length === 0 && deleteArr.length === 0,\n    };\n}\n","import { execExpr } from \"../execExpr\";\nimport diff from \"./diff\";\nimport { unmountChildren } from \"../unmount\";\nimport { observer } from \"../autorun\";\nimport transform from \"../transform\";\nimport { DIRECTIVEPREV } from \"../config\";\nexport default function handleFor(value, element, ctxs, vdom, node) {\n    const [itemIndex, arrName] = value.split(' in ').map(i => i.trim());\n    const [itemName, indexName] = itemIndex.replace(/(^\\s*\\()|(\\)\\s*$)/g, '').split(',').map(i => i.trim());\n    let isExeced = false; // 是否执行过\n    let cacheKeys = [];\n    let cacheKeyVdom = {};\n    const keyValue = node.children[0] && (node.children[0].props['key'] || node.children[0].props[':key']);\n    vdom.exprs.push(execExpr(arrName, ctxs, (newValue, oldValue = []) => {\n        // ys:for只应该含有一个子元素\n        if (node.children.length > 1) {\n            console.error(`${DIRECTIVEPREV}for just should have one child`);\n        }\n        // diff cache key\n        const newKeyValue = newValue.map((item, index) => {\n            let key;\n            execExpr(keyValue, [\n                ...ctxs,\n                {\n                    [itemName]: item,\n                    [indexName]: index,\n                }\n            ], newValue => {\n                key = newValue;\n            })();\n            return {\n                key,\n                item,\n            };\n        });\n        // console.log(newKeyValue)\n        const newKyes = newKeyValue.map(i => i.key);\n        const { add, del, noChange } = diff(cacheKeys, newKyes, keyValue);\n        if (noChange)\n            return;\n        cacheKeys = newKyes;\n        // 如果执行过\n        if (isExeced) {\n            // 存在key，卸载需要删除的key对应的vdom，否则整体卸载\n            if (keyValue) {\n                del.arr.forEach(key => {\n                    cacheKeyVdom[key] && unmountChildren(cacheKeyVdom[key].vdom);\n                    delete cacheKeyVdom[key]; // 删除缓存\n                });\n            }\n            else {\n                unmountChildren(vdom);\n            }\n        }\n        isExeced = true;\n        // 我们只处理 移除 + 头尾新增的情况\n        // key不发生变化的需要更新index\n        // key新增的还是需要新增\n        const childNode = element.childNodes && element.childNodes[0];\n        newKeyValue.forEach((keyItem, index) => {\n            const { key, item } = keyItem;\n            // 不存在就新增，存在就更新\n            if (!cacheKeyVdom[key]) {\n                let dd = {};\n                indexName && (dd[indexName] = index);\n                itemName && (dd[itemName] = item);\n                const observeIndexItem = observer(dd);\n                const PE = add.before.arr.includes(key) ? {\n                    appendChild: (newNode) => {\n                        childNode ? element.insertBefore(newNode, childNode) : element.appendChild(newNode);\n                        return newNode;\n                    }\n                } : element;\n                const result = transform(node, PE, [...ctxs, observeIndexItem], vdom);\n                // 如果没有key就不要加入缓存了\n                if (keyValue) {\n                    cacheKeyVdom[key] = {\n                        vdom: result,\n                        observeIndexItem,\n                    };\n                }\n            }\n            else {\n                const hh = cacheKeyVdom[key].observeIndexItem;\n                // itemName && (hh[itemName] = item)\n                indexName && (hh[indexName] = index);\n            }\n        });\n    }));\n}\n","import { execExpr } from \"../execExpr\";\nimport { unmountNode } from \"../unmount\";\nimport { addElement } from \"../transform\";\n/**\n * 处理ys:if命令\n *\n * @param {HTMLElement} parent\n * @param {any} node\n * @param {array} ctxs\n */\nexport default function handleIf(parent, node, ctxs, parentVdom) {\n    let commentHook = document.createComment('ys:if 占位');\n    parent.appendChild(commentHook);\n    let collect = [];\n    parentVdom.exprs.push(execExpr(node.props['ys:if'], ctxs, (newValue, oldValue) => {\n        if (newValue) {\n            addElement((ele, vdom) => {\n                vdom && collect.push(vdom);\n                ele && commentHook.parentElement && commentHook.parentElement.insertBefore(ele, commentHook);\n            }, node, ctxs, parentVdom);\n        }\n        else {\n            // 如果node\n            collect.forEach(i => unmountNode(i));\n            collect = [];\n        }\n    }));\n}\n","import { VirtualDOM } from \"./d\";\nimport { getType, isPromise, getComponent, getParentCtx, resortArr, isComponent, } from './util';\nimport { observer, addObserve } from './autorun';\nimport { execExpr } from \"./execExpr\";\nimport render from './render';\nimport eventAlias from \"./eventAlias\";\nimport { unmountNode } from \"./unmount\";\nimport handleClass from \"./property/handleClass\";\nimport handleStyle from \"./property/handleStyle\";\nimport { handleEnter } from \"./domLifeCycle\";\nimport handleFor from \"./directive/for\";\nimport handleIf from \"./directive/if\";\nimport { DIRECTIVEPREV } from \"./config\";\n// 需要优先处理的props key\nconst NEED_RESET_KEY = [':key', `${DIRECTIVEPREV}if`, `${DIRECTIVEPREV}show`, `${DIRECTIVEPREV}for`];\n// key发生变化后，组件重新选案\nfunction handleKeyChange(vdom) {\n    unmountNode(vdom);\n    vdom.reRender && vdom.reRender();\n}\n// 处理innerHTML\nfunction handleDangerousHTML(vdom, ctxs = [], key = '') {\n    if (key === 'dangerousHTML') {\n        vdom.dom.innerHTML = vdom.ast.props[key];\n    }\n    else if (key === ':dangerousHTML') {\n        execExpr(vdom.ast.props[key], ctxs, (newValue, oldValue) => {\n            vdom.dom.innerHTML = newValue;\n        });\n    }\n    return false;\n}\n/**\n * 添加属性\n *\n * @param {HTMLElement} element\n * @param {any} node\n * @param {array} ctxs\n * @returns\n */\nfunction addProperties(element, vdom, ctxs) {\n    const { ast: node } = vdom;\n    const info = {\n        transformChildren: true,\n    };\n    resortArr(Object.keys(node.props), NEED_RESET_KEY).forEach(key => {\n        const value = node.props[key];\n        // 处理class\n        if (handleClass(vdom, ctxs, key))\n            return;\n        // 处理html\n        if (handleDangerousHTML(vdom, ctxs, key))\n            return;\n        const KEY = key.slice(1);\n        // 处理事件绑定\n        if (key.startsWith('@')) {\n            let aliasListeners = [];\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                if (eventAlias[KEY]) {\n                    // 使用事件别名\n                    aliasListeners.forEach(aliasListener => {\n                        vdom.events.off(element, aliasListener.eventName, aliasListener.listener);\n                    });\n                    aliasListeners = eventAlias[KEY](newValue);\n                    aliasListeners.forEach(aliasListener => {\n                        vdom.events.on(element, aliasListener.eventName, aliasListener.listener);\n                    });\n                }\n                else {\n                    vdom.events.off(element, KEY, oldValue);\n                    vdom.events.on(element, KEY, newValue);\n                }\n            }));\n        }\n        else if (key.startsWith(':')) {\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue, execTime) => {\n                if (['checked', 'value'].includes(KEY)) {\n                    element[KEY] = newValue;\n                }\n                else if (KEY === 'style') {\n                    newValue = handleStyle(newValue);\n                }\n                else if (KEY === 'key' && oldValue !== newValue && execTime > 1) {\n                    // 如果key发生变化，会卸载原有vdom，重新渲染\n                    handleKeyChange(vdom);\n                    return;\n                }\n                element.setAttribute(KEY, newValue);\n            }));\n        }\n        else if (key.startsWith(DIRECTIVEPREV)) {\n            const directive = key.slice(DIRECTIVEPREV.length);\n            // 显示\n            if (directive === 'show') {\n                vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                    element.style.cssText += `;display: ${newValue ? 'block' : 'none'};`;\n                }));\n            }\n            else if (directive === 'for') {\n                info.transformChildren = false;\n                handleFor(value, element, ctxs, vdom, node);\n            }\n            else if (directive === 'bgd') {\n                vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                    element.style.cssText += `;background: url(${newValue});`;\n                }));\n            }\n            else if (directive === 'html') {\n                info.transformChildren = false;\n                vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue) => {\n                    element.innerHTML = newValue;\n                }));\n            }\n        }\n        else if (key === 'ref') {\n            switch (getType(value)) {\n                case 'string': {\n                    ctxs[0].refs[value] = element;\n                    break;\n                }\n                case 'function': {\n                    value();\n                    break;\n                }\n            }\n        }\n        else {\n            element.setAttribute(key, node.props[key]);\n        }\n    });\n    return info;\n}\n/**\n * 获取自定义组件属性\n * @param node\n * @param vdom\n * @param ctxs\n */\nfunction getProps(vdom, ctxs) {\n    const { ast: node } = vdom;\n    let newProps = {};\n    resortArr(Object.keys(node.props), NEED_RESET_KEY).forEach(key => {\n        const value = node.props[key];\n        if (/^[@:]/.test(key)) {\n            const KEY = key.slice(1);\n            vdom.exprs.push(execExpr(value, ctxs, (newValue, oldValue, execTime) => {\n                // 如果key为props，则对props进行rest操作，方便子组件对数据的获取\n                if (KEY === 'props') {\n                    Object.entries(newValue).forEach(([k, v]) => {\n                        addObserve(newProps, k, v);\n                    });\n                }\n                else {\n                    newProps[KEY] = newValue;\n                }\n                if (KEY === 'key' && oldValue !== newValue && execTime > 1) {\n                    // 如果key发生变化，会卸载原有vdom，重新渲染\n                    handleKeyChange(vdom);\n                }\n            }));\n        }\n        else {\n            newProps[key] = value;\n        }\n    });\n    // 元素传递\n    newProps['children'] = {\n        node,\n        ctxs,\n    };\n    newProps = observer(newProps);\n    return newProps;\n}\n/**\n * 添加元素\n *\n * @param {function} appendFn\n * @param {any} node\n * @param {array} ctxs\n * @returns\n */\nexport function addElement(appendFn, ast, ctxs, parentVdom) {\n    const vdom = new VirtualDOM(parentVdom);\n    vdom.ast = ast;\n    vdom.ctxs = ctxs;\n    // 方便dom卸载后，重新渲染\n    vdom.reRender = () => addElement(appendFn, ast, ctxs, parentVdom);\n    if (/^[A-Z]/.test(ast.tagName)) {\n        // 处理子组件\n        const Com = getComponent(ast.tagName, ctxs);\n        // 判断是否是Component的子类\n        if (isComponent(Com, ast)) {\n            appendFn(undefined, vdom);\n            function renderComponent(Com) {\n                // 因为有可能是异步获取组件，因此这里对vdom进行判断，vdom是否已经被卸载\n                if (vdom.unmounted) {\n                    console.log('vdom已被卸载，不执行渲染');\n                    return;\n                }\n                // 通过创建一个Comment占位节点，可实无root渲染\n                const com = render(Com, getProps(vdom, ctxs), {\n                    appendChild: appendFn,\n                }, vdom);\n                com.parent = getParentCtx(ctxs);\n                com.parent.children.push(com);\n                vdom.component = com;\n                // 添加ref\n                if (ast.props.ref) {\n                    ctxs[0].refs[ast.props.ref] = com;\n                }\n            }\n            // 如果是Promise，可执行懒加载\n            if (isPromise(Com)) {\n                Com.then(Com => {\n                    renderComponent(Com);\n                });\n            }\n            else {\n                renderComponent(Com);\n            }\n        }\n    }\n    else if (ast.tagName == 'slot') {\n        // 处理slot，获取children后，并不监听变化\n        execExpr('props.children', ctxs, (newValue) => {\n            transform(newValue.node, {\n                appendChild: appendFn,\n            }, [getProps(vdom, ctxs), ...newValue.ctxs], parentVdom);\n        })();\n    }\n    else {\n        let createE = vdom.ast.isSVG\n            ? document.createElementNS('http://www.w3.org/2000/svg', ast.tagName) // 添加svg支持\n            : document.createElement(ast.tagName);\n        vdom.dom = createE;\n        appendFn(createE, vdom);\n        const result = addProperties(createE, vdom, ctxs);\n        handleEnter(vdom); // 处理enter-class\n        result.transformChildren && ast.children && ast.children.length && transform(ast, createE, ctxs, vdom);\n    }\n    return vdom;\n}\n/**\n * ast transform to node\n *\n * @param {any} ast\n * @param {HTMLElement} element\n * @param {anray} ctxs\n */\nfunction transform(ast, element, ctxs, parentVdom = new VirtualDOM()) {\n    const vdoms = ast.children.map(node => {\n        if (node.type === 'element' || node.type === 'component') {\n            // 处理ys:if指令\n            if (node.props[`${DIRECTIVEPREV}if`]) {\n                handleIf(element, node, ctxs, parentVdom);\n            }\n            else {\n                return addElement((createE) => {\n                    createE && element.appendChild(createE);\n                }, node, ctxs, parentVdom);\n            }\n        }\n        else {\n            const vdom = new VirtualDOM(parentVdom);\n            vdom.ast = ast;\n            vdom.ctxs = ctxs;\n            let createE;\n            if (node.type === 'expr') {\n                createE = document.createTextNode('');\n                element.appendChild(createE);\n                vdom.exprs.push(execExpr(node.value, ctxs, (newValue) => {\n                    createE.textContent = newValue;\n                }));\n            }\n            else {\n                createE = document.createTextNode(node.value);\n                element.appendChild(createE);\n            }\n            vdom.dom = createE;\n            parentVdom.children.push(vdom);\n            return vdom;\n        }\n    }).filter(i => i);\n    return {\n        children: vdoms\n    };\n}\nexport default transform;\n","import Component from './Component';\nimport toAST from './parser/parseTemplate';\nimport transform from './transform';\nimport { observer, addObserve, autorun } from './autorun';\nimport { merge, isFunction, isString } from \"./util\";\nimport { COMPONENT_DOM_HOOK } from './config';\n/**\n * @param {any} Com\n * @param {*} props\n * @param {HTMLElement} dom\n * @returns {Component}\n */\nexport default function render(Com, props, dom, vdom) {\n    // 卸载原有dom上挂载的component\n    if (dom instanceof HTMLElement\n        && dom[COMPONENT_DOM_HOOK]\n        && dom[COMPONENT_DOM_HOOK].vdom\n        && !dom[COMPONENT_DOM_HOOK].vdom.unmounted) {\n        dom[COMPONENT_DOM_HOOK].__willUnmount();\n    }\n    // string/function -> Component\n    if (isFunction(Com)) {\n        // 如果函数没有继承Component，就把它当做render方法\n        if (!(Com.prototype instanceof Component)) {\n            const renderFn = Com;\n            Com = class extends Component {\n                constructor() {\n                    super(...arguments);\n                    this.render = renderFn;\n                }\n            };\n        }\n    }\n    else if (isString(Com)) {\n        const template = Com;\n        Com = class extends Component {\n            constructor() {\n                super(...arguments);\n                this.template = template;\n            }\n        };\n    }\n    else {\n        console.error(`render first param should be a function`);\n    }\n    const ctx = new Com();\n    // 把组件实例挂载在dom上\n    dom instanceof HTMLElement && (dom[COMPONENT_DOM_HOOK] = ctx);\n    // state 与 props 属性不可被更改\n    Object.defineProperty(ctx, 'state', {\n        writable: false,\n        enumerable: true,\n        value: observer(ctx.state, { deep: true }),\n    });\n    Object.defineProperty(ctx, 'props', {\n        writable: false,\n        enumerable: true,\n        value: observer(merge(props, Com.defaultProps || {})),\n    });\n    // 处理computed的key，将其observer化，并挂载在组件实例上\n    // 处理需要有个autorun包裹，然后\n    // 需要obersev\n    Object.keys(ctx.computed).forEach(key => {\n        addObserve(ctx, key, ctx.computed[key].call(ctx));\n        // 待收集依赖\n        ctx.vdom.exprs.push(autorun(() => {\n            return ctx.computed[key].call(ctx);\n        }, {\n            callback: newValue => {\n                ctx[key] = newValue;\n            }\n        }));\n    });\n    // 即将渲染\n    ctx.willMount();\n    // 渲染进行中\n    const ast = toAST(ctx.render());\n    ast.ctx = ctx;\n    transform(ast, dom, [ctx, ctx.state, ctx.props], ctx.vdom);\n    // 渲染完毕\n    ctx.didMount();\n    return ctx;\n}\n","import Component from \"./Component\";\nimport render from \"./render\";\nimport register from \"./register\";\nlet Router = {\n    hash: false,\n    routes: {},\n    push(url) {\n        window.history.pushState({}, '', this.getFullPath(url));\n        this.handleUrlChange(url);\n    },\n    replace(url) {\n        window.history.replaceState({}, '', this.getFullPath(url));\n        this.handleUrlChange(url);\n    },\n    handleUrlChange(url) {\n        const a = document.createElement('a');\n        a.href = url;\n        const path = a.pathname;\n        const result = match(path, this.routes);\n        if (result) {\n            const { router, params, value } = result;\n            const { component, props = {} } = value;\n            render(component, Object.assign({}, props, { params }), document.body);\n        }\n    },\n    getFullPath(url) {\n        return this.hash ? `${location.pathname}${location.search}#${url}` : url;\n    },\n    getPathname() {\n        return (this.hash ? location.hash.slice(1) : location.pathname) || '/';\n    }\n};\nexport default function router(config) {\n    Router = Object.assign({}, Router, config);\n    window.addEventListener('popstate', () => {\n        Router.handleUrlChange(Router.getPathname());\n    });\n    Router.handleUrlChange(Router.getPathname());\n}\nregister('Link', (_a = class Link extends Component {\n        constructor() {\n            super(...arguments);\n            this.click = (e) => {\n                const { click, replace = false, redirect = false, href = '' } = this.props;\n                e.preventDefault();\n                click && click(e);\n                if (redirect) {\n                    replace ? location.replace(href) : location.href = href;\n                }\n                else if (replace) {\n                    Router.replace(href);\n                }\n                else {\n                    Router.push(href);\n                }\n            };\n        }\n        render() {\n            return (`\n            <a :data-href=\"href\" @click=\"click\" :class=\"props.class\" :style=\"props.style\">\n                <slot />\n            </a>\n        `);\n        }\n    },\n    _a.defaultProps = {\n        href: ''\n    },\n    _a));\n// 路由匹配\nfunction match(url = '', obj = {}) {\n    const urlItems = url.trim().split('/');\n    let params = {};\n    let router = '';\n    const matched = Object.keys(obj).some((route) => {\n        const routeItems = route.trim().split('/');\n        router = '';\n        // 全局匹配的级别最低，一般用来处理404\n        if (route === '*')\n            return false;\n        // 长度相等，或者路由以*为结尾并且routeItems不能比urlItems长\n        if (routeItems.length === urlItems.length\n            || (routeItems[routeItems.length - 1] === '*' && routeItems.length <= urlItems.length)) {\n            params = {}; // 获取参数\n            router = route; // 匹配到的路由地址\n            return routeItems.every((i, index) => {\n                const urlItemsItem = urlItems[index];\n                // 参数匹配\n                if (i.startsWith(':')) {\n                    // 对 /:id的支持\n                    const [key, reg] = i.slice(1).split('@');\n                    params[key] = urlItemsItem;\n                    // 对正则表达式的支持 /:name@aa.+\n                    if (reg) {\n                        return new RegExp(`^${reg}$`).test(urlItemsItem);\n                    }\n                    return true;\n                }\n                // * 匹配所有\n                if (i === '*') {\n                    return true;\n                }\n                // 常规性匹配 Abc*\n                if (i.includes('*')) {\n                    const reg = i.replace('*', '.*');\n                    return new RegExp(`^${reg}$`).test(urlItemsItem);\n                }\n                // 纯文匹配\n                return i === urlItemsItem;\n            });\n        }\n        return false;\n    });\n    if (matched) {\n        return {\n            params,\n            url,\n            router,\n            value: obj[router],\n        };\n    }\n    else if (obj['*']) {\n        // 观察是否配置了全局匹配\n        // 其实此时应该跳转404\n        return {\n            params,\n            url,\n            router: '*',\n            value: obj['*'],\n        };\n    }\n    return null;\n}\nvar _a;\n","import Component from './Component';\nimport render from './render';\nimport { autorun, observer, isObserve, addObserve, observerDeep } from './autorun';\nimport register, { registerComponents } from \"./register\";\nimport { addEventAlias } from \"./eventAlias\";\nimport { addPipe } from \"./execExpr\";\nimport forceUpdate, { addUpdateQueue } from \"./forceUpdate\";\nimport router from './router';\nexport default {\n    Component,\n    render,\n    autorun,\n    observer,\n    isObserve,\n    addObserve,\n    observerDeep,\n    register,\n    addEventAlias,\n    registerComponents,\n    addPipe,\n    forceUpdate,\n    addUpdateQueue,\n    router,\n};\nexport { Component, render, autorun, observer, isObserve, addObserve, observerDeep, register, addEventAlias, registerComponents, addPipe, forceUpdate, addUpdateQueue, router, };\n"],"names":["registerComponents","register","name","Com","getType","arg","Object","prototype","toString","call","match","toLowerCase","isFunction","args","every","isArray","isString","isPromise","toClassNames","v","map","join","keys","key","uniqueArr","arr","newArr","forEach","includes","item","push","merge","anys","base","slice","any","undefined","bindContext","fn","ctx","bind","uuid","len","S","LEN","length","repeat","split","Math","round","random","getComponent","ctxs","i","components","getParentCtx","Component","resortArr","isComponent","component","ast","error","tagName","FVEvents","cache","element","addEventListener","filter","_key","_fn","removeEventListener","VirtualDOM","parent","exprs","events","children","unmounted","classNames","dom","HTMLElement","off","__willUnmount","TokenElement","type","index","value","origin","ASTNode","props","isSVG","test","queue","timeout","isUpdating","addUpdateQueue","list","setTimeout","forceUpdate","afterFn","haveExec","DIRECTIVEPREV","COMPONENT_DOM_HOOK","OBSERVE_ID","Observe","defaultCurrent","currentFn","resetCurrentFn","Depends","root","ObserveId","id","addObserverId","newObj","defineProperty","addObserve","defaultValue","options","deep","depends","isResetValue","collect","observer","assign","parentDepend","newValue","run","observeArr","isObserve","concat","result","observeObj","obj","observerDeep","autorun","destoryDepends","destory","splice","wrapFn","getDestory","depend","callback","parseExpr","body","params","replace","trim","Function","parseFilter","parseFilterCache","str","exprArr","current","char","pipes","addPipe","handlePipe","fns","getPipes","execExprIm","expr","window","getValue","hasOwnProperty","inputExpr","pipeExprs","parseResult","input","execExpr","oldValue","newValueCache","execTime","isEqual","equal","updateClassName","className","testClass","vdom","classProperties","some","handleModuleCss","moduleMap","handleClass","node","moduleCss","classes","handleLeave","leaveTime","parentElement","removeChild","handleEnter","unmountNode","removeDOM","unmount","unmountChildren","child","template","state","refs","computed","$emit","data","stopBubble","emit","$emitChildren","$emitSiblings","com","willUnmount","defaultProps","selfCloseElements","M","SELF_CLOSE","CLOSE_START","TAG_CLOSE","OPEN_START","EQ","TAG_NAME","PROPERTY_NAME","PROPERTY_VALUE","EXPR","STRING","getToken","token","localStr","removePreSpace","space","getPrev","next","matchStr","strValue","handleASTError","message","enter","row","column","lastIndexOf","toAST","currentNode","currentT","getT","localIndex","TAG_TYPE","last","handleSVG","isScroll","eventAlias","event","keyCode","recodeKey","ctrl","navigator","userAgent","time","isMove","Date","now","addEventAlias","eventName","handleStyle","style","entries","KEY","$1","diff","oldArr","isKeyExist","deleteArr","keepArr","addAll","prevIndex","add","INDEX","indexOf","start","end","before","after","handleFor","itemIndex","arrName","itemName","indexName","isExeced","cacheKeys","cacheKeyVdom","keyValue","newKeyValue","newKyes","del","noChange","childNode","childNodes","keyItem","dd","observeIndexItem","PE","newNode","insertBefore","appendChild","transform","hh","handleIf","parentVdom","commentHook","document","createComment","ele","NEED_RESET_KEY","handleKeyChange","reRender","handleDangerousHTML","innerHTML","addProperties","info","startsWith","aliasListeners","aliasListener","listener","on","setAttribute","directive","cssText","transformChildren","getProps","newProps","k","addElement","appendFn","renderComponent","log","render","ref","then","createE","createElementNS","createElement","vdoms","createTextNode","textContent","renderFn","arguments","willMount","didMount","Router","url","history","pushState","getFullPath","handleUrlChange","replaceState","a","href","path","pathname","routes","router","hash","location","search","config","getPathname","_a","click","e","redirect","preventDefault","urlItems","matched","route","routeItems","urlItemsItem","reg","RegExp"],"mappings":"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"}